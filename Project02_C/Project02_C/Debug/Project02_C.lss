
Project02_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00001258  000012ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001258  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  0080010e  0080010e  000012fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000012fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000132c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001368  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c45  00000000  00000000  000013e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fb  00000000  00000000  00002025  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000060d  00000000  00000000  00002920  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  00002f30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f5  00000000  00000000  0000310c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005f7  00000000  00000000  00003601  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003bf8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
       2:	00 00       	nop
       4:	c7 c0       	rjmp	.+398    	; 0x194 <__vector_1>
       6:	00 00       	nop
       8:	d4 c0       	rjmp	.+424    	; 0x1b2 <__vector_2>
       a:	00 00       	nop
       c:	e1 c0       	rjmp	.+450    	; 0x1d0 <__vector_3>
       e:	00 00       	nop
      10:	ee c0       	rjmp	.+476    	; 0x1ee <__vector_4>
      12:	00 00       	nop
      14:	fb c0       	rjmp	.+502    	; 0x20c <__vector_5>
      16:	00 00       	nop
      18:	08 c1       	rjmp	.+528    	; 0x22a <__vector_6>
      1a:	00 00       	nop
      1c:	96 c0       	rjmp	.+300    	; 0x14a <__bad_interrupt>
      1e:	00 00       	nop
      20:	94 c0       	rjmp	.+296    	; 0x14a <__bad_interrupt>
      22:	00 00       	nop
      24:	92 c0       	rjmp	.+292    	; 0x14a <__bad_interrupt>
      26:	00 00       	nop
      28:	90 c0       	rjmp	.+288    	; 0x14a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8e c0       	rjmp	.+284    	; 0x14a <__bad_interrupt>
      2e:	00 00       	nop
      30:	8c c0       	rjmp	.+280    	; 0x14a <__bad_interrupt>
      32:	00 00       	nop
      34:	8a c0       	rjmp	.+276    	; 0x14a <__bad_interrupt>
      36:	00 00       	nop
      38:	88 c0       	rjmp	.+272    	; 0x14a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4a c1       	rjmp	.+660    	; 0x2d2 <__vector_15>
      3e:	00 00       	nop
      40:	84 c0       	rjmp	.+264    	; 0x14a <__bad_interrupt>
      42:	00 00       	nop
      44:	82 c0       	rjmp	.+260    	; 0x14a <__bad_interrupt>
      46:	00 00       	nop
      48:	80 c0       	rjmp	.+256    	; 0x14a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	7e c0       	rjmp	.+252    	; 0x14a <__bad_interrupt>
      4e:	00 00       	nop
      50:	7c c0       	rjmp	.+248    	; 0x14a <__bad_interrupt>
      52:	00 00       	nop
      54:	7a c0       	rjmp	.+244    	; 0x14a <__bad_interrupt>
      56:	00 00       	nop
      58:	78 c0       	rjmp	.+240    	; 0x14a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	76 c0       	rjmp	.+236    	; 0x14a <__bad_interrupt>
      5e:	00 00       	nop
      60:	74 c0       	rjmp	.+232    	; 0x14a <__bad_interrupt>
      62:	00 00       	nop
      64:	72 c0       	rjmp	.+228    	; 0x14a <__bad_interrupt>
      66:	00 00       	nop
      68:	70 c0       	rjmp	.+224    	; 0x14a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6e c0       	rjmp	.+220    	; 0x14a <__bad_interrupt>
      6e:	00 00       	nop
      70:	6c c0       	rjmp	.+216    	; 0x14a <__bad_interrupt>
      72:	00 00       	nop
      74:	6a c0       	rjmp	.+212    	; 0x14a <__bad_interrupt>
      76:	00 00       	nop
      78:	68 c0       	rjmp	.+208    	; 0x14a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	66 c0       	rjmp	.+204    	; 0x14a <__bad_interrupt>
      7e:	00 00       	nop
      80:	64 c0       	rjmp	.+200    	; 0x14a <__bad_interrupt>
      82:	00 00       	nop
      84:	62 c0       	rjmp	.+196    	; 0x14a <__bad_interrupt>
      86:	00 00       	nop
      88:	60 c0       	rjmp	.+192    	; 0x14a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <main+0x47e>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e1       	ldi	r29, 0x10	; 16
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	e8 e5       	ldi	r30, 0x58	; 88
     122:	f2 e1       	ldi	r31, 0x12	; 18
     124:	00 e0       	ldi	r16, 0x00	; 0
     126:	0b bf       	out	0x3b, r16	; 59
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
     12a:	07 90       	elpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	ae 30       	cpi	r26, 0x0E	; 14
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
     134:	21 e0       	ldi	r18, 0x01	; 1
     136:	ae e0       	ldi	r26, 0x0E	; 14
     138:	b1 e0       	ldi	r27, 0x01	; 1
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	a8 32       	cpi	r26, 0x28	; 40
     140:	b2 07       	cpc	r27, r18
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	a2 d1       	rcall	.+836    	; 0x48a <main>
     146:	0c 94 2a 09 	jmp	0x1254	; 0x1254 <_exit>

0000014a <__bad_interrupt>:
     14a:	5a cf       	rjmp	.-332    	; 0x0 <__vectors>

0000014c <inic>:

/*This is the initialization function where all the starting commands will be performed (such as defining ports and interrupts)*/
void inic(void)
{
	/* Pin 7 and 8 will be used as outputs so we can select which display we intend to use*/
	DDRD = 0b11000000;			
     14c:	80 ec       	ldi	r24, 0xC0	; 192
     14e:	81 bb       	out	0x11, r24	; 17
	/*In this couple of lines we initialize PORTC as output and make sure that all the displays are turned off*/
	DDRC = 0b11111111;
     150:	8f ef       	ldi	r24, 0xFF	; 255
     152:	84 bb       	out	0x14, r24	; 20
	screen3 = display[11];
     154:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <screen3>
	screen2 = display[11];
     158:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <screen2>
	screen1 = display[11];
     15c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <screen1>
	/*PortB is the one used for the motor and is initialized in this 2 lines*/
	DDRB = 0b11100000;
     160:	80 ee       	ldi	r24, 0xE0	; 224
     162:	87 bb       	out	0x17, r24	; 23
	PORTB = 0b00100000;
     164:	80 e2       	ldi	r24, 0x20	; 32
     166:	88 bb       	out	0x18, r24	; 24
	
	/*External interrupts are initialized here which will be used to determine which of the switches were pressed*/
	EICRA = 0b10101010;
     168:	8a ea       	ldi	r24, 0xAA	; 170
     16a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EICRB = 0B00001010;
     16e:	8a e0       	ldi	r24, 0x0A	; 10
     170:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 0b00111111;
     172:	8f e3       	ldi	r24, 0x3F	; 63
     174:	89 bf       	out	0x39, r24	; 57
	/*Here we initialize the Timer/Counter 0 with a prescaler of 1024 giving us a time of 5ms*/
	OCR0 = 77;
     176:	8d e4       	ldi	r24, 0x4D	; 77
     178:	81 bf       	out	0x31, r24	; 49
	TCCR0 = 0b00001111;    
     17a:	8f e0       	ldi	r24, 0x0F	; 15
     17c:	83 bf       	out	0x33, r24	; 51
	TIMSK |= 0b00000010;    
     17e:	87 b7       	in	r24, 0x37	; 55
     180:	82 60       	ori	r24, 0x02	; 2
     182:	87 bf       	out	0x37, r24	; 55
	/*OCR2 is where we give the microcontroler the information of the speed we want it to operate in, we forced it to start turned off,
	this uses the Timer/Counter 2 so we also initialized it TC2 witch a prescaler of 64 mode 1 and phase correct*/
	OCR2 = DC(0);
     184:	13 bc       	out	0x23, r1	; 35
	TCCR2 = 0b01100011;
     186:	83 e6       	ldi	r24, 0x63	; 99
     188:	85 bd       	out	0x25, r24	; 37
	//AD - Only if testing C function
	ADMUX = 0b00000000; //ADC0 channel for the potenciometer
     18a:	17 b8       	out	0x07, r1	; 7
	ADCSRA = 0b10000111;
     18c:	87 e8       	ldi	r24, 0x87	; 135
     18e:	86 b9       	out	0x06, r24	; 6
		
	
	sei();
     190:	78 94       	sei
     192:	08 95       	ret

00000194 <__vector_1>:
	display_();
	flag = 1;
}

ISR(INT0_vect) 
{
     194:	1f 92       	push	r1
     196:	0f 92       	push	r0
     198:	0f b6       	in	r0, 0x3f	; 63
     19a:	0f 92       	push	r0
     19c:	11 24       	eor	r1, r1
     19e:	8f 93       	push	r24
	switch_=1;
     1a0:	81 e0       	ldi	r24, 0x01	; 1
     1a2:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <switch_>
}
     1a6:	8f 91       	pop	r24
     1a8:	0f 90       	pop	r0
     1aa:	0f be       	out	0x3f, r0	; 63
     1ac:	0f 90       	pop	r0
     1ae:	1f 90       	pop	r1
     1b0:	18 95       	reti

000001b2 <__vector_2>:

ISR(INT1_vect) 
{
     1b2:	1f 92       	push	r1
     1b4:	0f 92       	push	r0
     1b6:	0f b6       	in	r0, 0x3f	; 63
     1b8:	0f 92       	push	r0
     1ba:	11 24       	eor	r1, r1
     1bc:	8f 93       	push	r24
	switch_=2;
     1be:	82 e0       	ldi	r24, 0x02	; 2
     1c0:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <switch_>
}
     1c4:	8f 91       	pop	r24
     1c6:	0f 90       	pop	r0
     1c8:	0f be       	out	0x3f, r0	; 63
     1ca:	0f 90       	pop	r0
     1cc:	1f 90       	pop	r1
     1ce:	18 95       	reti

000001d0 <__vector_3>:

ISR(INT2_vect)
{
     1d0:	1f 92       	push	r1
     1d2:	0f 92       	push	r0
     1d4:	0f b6       	in	r0, 0x3f	; 63
     1d6:	0f 92       	push	r0
     1d8:	11 24       	eor	r1, r1
     1da:	8f 93       	push	r24
	switch_=3;
     1dc:	83 e0       	ldi	r24, 0x03	; 3
     1de:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <switch_>
}
     1e2:	8f 91       	pop	r24
     1e4:	0f 90       	pop	r0
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	0f 90       	pop	r0
     1ea:	1f 90       	pop	r1
     1ec:	18 95       	reti

000001ee <__vector_4>:

ISR(INT3_vect)
{
     1ee:	1f 92       	push	r1
     1f0:	0f 92       	push	r0
     1f2:	0f b6       	in	r0, 0x3f	; 63
     1f4:	0f 92       	push	r0
     1f6:	11 24       	eor	r1, r1
     1f8:	8f 93       	push	r24
	switch_=4;
     1fa:	84 e0       	ldi	r24, 0x04	; 4
     1fc:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <switch_>
}
     200:	8f 91       	pop	r24
     202:	0f 90       	pop	r0
     204:	0f be       	out	0x3f, r0	; 63
     206:	0f 90       	pop	r0
     208:	1f 90       	pop	r1
     20a:	18 95       	reti

0000020c <__vector_5>:
ISR(INT4_vect) { 
     20c:	1f 92       	push	r1
     20e:	0f 92       	push	r0
     210:	0f b6       	in	r0, 0x3f	; 63
     212:	0f 92       	push	r0
     214:	11 24       	eor	r1, r1
     216:	8f 93       	push	r24
	analog = 1;
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
}
     21e:	8f 91       	pop	r24
     220:	0f 90       	pop	r0
     222:	0f be       	out	0x3f, r0	; 63
     224:	0f 90       	pop	r0
     226:	1f 90       	pop	r1
     228:	18 95       	reti

0000022a <__vector_6>:
ISR(INT5_vect) { 
     22a:	1f 92       	push	r1
     22c:	0f 92       	push	r0
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	0f 92       	push	r0
     232:	11 24       	eor	r1, r1
	analog = 0;
     234:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__data_end>
}
     238:	0f 90       	pop	r0
     23a:	0f be       	out	0x3f, r0	; 63
     23c:	0f 90       	pop	r0
     23e:	1f 90       	pop	r1
     240:	18 95       	reti

00000242 <mudar_rot>:
	}
}
/*In this function the direction of the motor will be checked and changed */
void mudar_rot(void)
{
	if (PORTB & (1<<5))
     242:	c5 9b       	sbis	0x18, 5	; 24
     244:	0e c0       	rjmp	.+28     	; 0x262 <mudar_rot+0x20>
	{
		PORTB |=(1<<5)|(1<<6);
     246:	88 b3       	in	r24, 0x18	; 24
     248:	80 66       	ori	r24, 0x60	; 96
     24a:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     24c:	2f ef       	ldi	r18, 0xFF	; 255
     24e:	89 e6       	ldi	r24, 0x69	; 105
     250:	98 e1       	ldi	r25, 0x18	; 24
     252:	21 50       	subi	r18, 0x01	; 1
     254:	80 40       	sbci	r24, 0x00	; 0
     256:	90 40       	sbci	r25, 0x00	; 0
     258:	e1 f7       	brne	.-8      	; 0x252 <mudar_rot+0x10>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <mudar_rot+0x1a>
     25c:	00 00       	nop
		_delay_ms(500);
		PORTB &=~(1<<5);
     25e:	c5 98       	cbi	0x18, 5	; 24
     260:	08 95       	ret
	}else
	{
		PORTB |=(1<<5)|(1<<6);
     262:	88 b3       	in	r24, 0x18	; 24
     264:	80 66       	ori	r24, 0x60	; 96
     266:	88 bb       	out	0x18, r24	; 24
     268:	2f ef       	ldi	r18, 0xFF	; 255
     26a:	89 e6       	ldi	r24, 0x69	; 105
     26c:	98 e1       	ldi	r25, 0x18	; 24
     26e:	21 50       	subi	r18, 0x01	; 1
     270:	80 40       	sbci	r24, 0x00	; 0
     272:	90 40       	sbci	r25, 0x00	; 0
     274:	e1 f7       	brne	.-8      	; 0x26e <mudar_rot+0x2c>
     276:	00 c0       	rjmp	.+0      	; 0x278 <mudar_rot+0x36>
     278:	00 00       	nop
		_delay_ms(500);
		PORTB &=~(1<<6);
     27a:	c6 98       	cbi	0x18, 6	; 24
     27c:	08 95       	ret

0000027e <display_>:
}

/*In this function we update the display with the values of the variables given from the above functions*/
void display_(void)
{
	PORTD = 0b11000000;
     27e:	80 ec       	ldi	r24, 0xC0	; 192
     280:	82 bb       	out	0x12, r24	; 18
	PORTC = screen3;
     282:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <screen3>
     286:	85 bb       	out	0x15, r24	; 21
     288:	8f e9       	ldi	r24, 0x9F	; 159
     28a:	9f e0       	ldi	r25, 0x0F	; 15
     28c:	01 97       	sbiw	r24, 0x01	; 1
     28e:	f1 f7       	brne	.-4      	; 0x28c <display_+0xe>
     290:	00 c0       	rjmp	.+0      	; 0x292 <display_+0x14>
     292:	00 00       	nop
	_delay_ms(1);
	PORTD = 0b10000000;
     294:	80 e8       	ldi	r24, 0x80	; 128
     296:	82 bb       	out	0x12, r24	; 18
	PORTC = screen2;
     298:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <screen2>
     29c:	85 bb       	out	0x15, r24	; 21
     29e:	8f e9       	ldi	r24, 0x9F	; 159
     2a0:	9f e0       	ldi	r25, 0x0F	; 15
     2a2:	01 97       	sbiw	r24, 0x01	; 1
     2a4:	f1 f7       	brne	.-4      	; 0x2a2 <display_+0x24>
     2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <display_+0x2a>
     2a8:	00 00       	nop
	_delay_ms(1);
	PORTD = 0b01000000;
     2aa:	80 e4       	ldi	r24, 0x40	; 64
     2ac:	82 bb       	out	0x12, r24	; 18
	/*This "if" condition is used to make sure the "-" sign wont appear when the motor is off*/
	if(motor!=0){
     2ae:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <motor>
     2b2:	88 23       	and	r24, r24
     2b4:	49 f0       	breq	.+18     	; 0x2c8 <display_+0x4a>
	PORTC = screen1;
     2b6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <screen1>
     2ba:	85 bb       	out	0x15, r24	; 21
     2bc:	8f e9       	ldi	r24, 0x9F	; 159
     2be:	9f e0       	ldi	r25, 0x0F	; 15
     2c0:	01 97       	sbiw	r24, 0x01	; 1
     2c2:	f1 f7       	brne	.-4      	; 0x2c0 <display_+0x42>
     2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <display_+0x48>
     2c6:	00 00       	nop
	_delay_ms(1);}
	PORTD = 0b00000000;
     2c8:	12 ba       	out	0x12, r1	; 18
	PORTC = screen0;
     2ca:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <screen0>
     2ce:	85 bb       	out	0x15, r24	; 21
     2d0:	08 95       	ret

000002d2 <__vector_15>:
void display_(void);
int convert(long long n);

/*This is the interrupt functions starting with the Timer/Counter 0 and followed by the switches*/
ISR(TIMER0_COMP_vect)
{
     2d2:	1f 92       	push	r1
     2d4:	0f 92       	push	r0
     2d6:	0f b6       	in	r0, 0x3f	; 63
     2d8:	0f 92       	push	r0
     2da:	11 24       	eor	r1, r1
     2dc:	0b b6       	in	r0, 0x3b	; 59
     2de:	0f 92       	push	r0
     2e0:	2f 93       	push	r18
     2e2:	3f 93       	push	r19
     2e4:	6f 93       	push	r22
     2e6:	7f 93       	push	r23
     2e8:	8f 93       	push	r24
     2ea:	9f 93       	push	r25
     2ec:	af 93       	push	r26
     2ee:	bf 93       	push	r27
     2f0:	ef 93       	push	r30
     2f2:	ff 93       	push	r31
	display_();
     2f4:	c4 df       	rcall	.-120    	; 0x27e <display_>
	flag = 1;
     2f6:	81 e0       	ldi	r24, 0x01	; 1
     2f8:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <flag>
}
     2fc:	ff 91       	pop	r31
     2fe:	ef 91       	pop	r30
     300:	bf 91       	pop	r27
     302:	af 91       	pop	r26
     304:	9f 91       	pop	r25
     306:	8f 91       	pop	r24
     308:	7f 91       	pop	r23
     30a:	6f 91       	pop	r22
     30c:	3f 91       	pop	r19
     30e:	2f 91       	pop	r18
     310:	0f 90       	pop	r0
     312:	0b be       	out	0x3b, r0	; 59
     314:	0f 90       	pop	r0
     316:	0f be       	out	0x3f, r0	; 63
     318:	0f 90       	pop	r0
     31a:	1f 90       	pop	r1
     31c:	18 95       	reti

0000031e <convert>:
	_delay_ms(1);}
	PORTD = 0b00000000;
	PORTC = screen0;
}
int convert(long long n)
{
     31e:	2f 92       	push	r2
     320:	3f 92       	push	r3
     322:	4f 92       	push	r4
     324:	5f 92       	push	r5
     326:	6f 92       	push	r6
     328:	7f 92       	push	r7
     32a:	8f 92       	push	r8
     32c:	9f 92       	push	r9
     32e:	af 92       	push	r10
     330:	bf 92       	push	r11
     332:	cf 92       	push	r12
     334:	df 92       	push	r13
     336:	ef 92       	push	r14
     338:	ff 92       	push	r15
     33a:	0f 93       	push	r16
     33c:	1f 93       	push	r17
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
     346:	2a 97       	sbiw	r28, 0x0a	; 10
     348:	0f b6       	in	r0, 0x3f	; 63
     34a:	f8 94       	cli
     34c:	de bf       	out	0x3e, r29	; 62
     34e:	0f be       	out	0x3f, r0	; 63
     350:	cd bf       	out	0x3d, r28	; 61
     352:	42 2e       	mov	r4, r18
     354:	53 2e       	mov	r5, r19
     356:	4d 83       	std	Y+5, r20	; 0x05
     358:	5e 83       	std	Y+6, r21	; 0x06
     35a:	86 2e       	mov	r8, r22
     35c:	79 87       	std	Y+9, r23	; 0x09
     35e:	8a 87       	std	Y+10, r24	; 0x0a
     360:	99 2e       	mov	r9, r25
	int dec = 0, i = 0, rem;
	while (n != 0) {
     362:	a0 e0       	ldi	r26, 0x00	; 0
     364:	57 d7       	rcall	.+3758   	; 0x1214 <__cmpdi2_s8>
     366:	09 f4       	brne	.+2      	; 0x36a <convert+0x4c>
     368:	73 c0       	rjmp	.+230    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     36a:	61 2c       	mov	r6, r1
     36c:	71 2c       	mov	r7, r1
     36e:	18 86       	std	Y+8, r1	; 0x08
     370:	1f 82       	std	Y+7, r1	; 0x07
		rem = n % 10;
     372:	0f 2e       	mov	r0, r31
     374:	fa e0       	ldi	r31, 0x0A	; 10
     376:	af 2e       	mov	r10, r31
     378:	f0 2d       	mov	r31, r0
     37a:	b1 2c       	mov	r11, r1
     37c:	c1 2c       	mov	r12, r1
     37e:	d1 2c       	mov	r13, r1
     380:	e1 2c       	mov	r14, r1
     382:	f1 2c       	mov	r15, r1
     384:	00 e0       	ldi	r16, 0x00	; 0
     386:	10 e0       	ldi	r17, 0x00	; 0
     388:	24 2d       	mov	r18, r4
     38a:	35 2d       	mov	r19, r5
     38c:	4d 81       	ldd	r20, Y+5	; 0x05
     38e:	5e 81       	ldd	r21, Y+6	; 0x06
     390:	68 2d       	mov	r22, r8
     392:	79 85       	ldd	r23, Y+9	; 0x09
     394:	8a 85       	ldd	r24, Y+10	; 0x0a
     396:	99 2d       	mov	r25, r9
     398:	42 d6       	rcall	.+3204   	; 0x101e <__moddi3>
     39a:	22 2e       	mov	r2, r18
     39c:	33 2e       	mov	r3, r19
		n /= 10;
     39e:	24 2d       	mov	r18, r4
     3a0:	35 2d       	mov	r19, r5
     3a2:	4d 81       	ldd	r20, Y+5	; 0x05
     3a4:	5e 81       	ldd	r21, Y+6	; 0x06
     3a6:	68 2d       	mov	r22, r8
     3a8:	79 85       	ldd	r23, Y+9	; 0x09
     3aa:	8a 85       	ldd	r24, Y+10	; 0x0a
     3ac:	99 2d       	mov	r25, r9
     3ae:	39 d6       	rcall	.+3186   	; 0x1022 <__divdi3>
     3b0:	c2 2e       	mov	r12, r18
     3b2:	d3 2e       	mov	r13, r19
     3b4:	b4 2e       	mov	r11, r20
     3b6:	a5 2e       	mov	r10, r21
     3b8:	e6 2e       	mov	r14, r22
     3ba:	f7 2e       	mov	r15, r23
     3bc:	08 2f       	mov	r16, r24
     3be:	19 2f       	mov	r17, r25
     3c0:	42 2e       	mov	r4, r18
     3c2:	53 2e       	mov	r5, r19
     3c4:	4d 83       	std	Y+5, r20	; 0x05
     3c6:	5e 83       	std	Y+6, r21	; 0x06
     3c8:	86 2e       	mov	r8, r22
     3ca:	79 87       	std	Y+9, r23	; 0x09
     3cc:	8a 87       	std	Y+10, r24	; 0x0a
     3ce:	99 2e       	mov	r9, r25
		dec += rem * pow(2, i);
     3d0:	b3 01       	movw	r22, r6
     3d2:	07 2c       	mov	r0, r7
     3d4:	00 0c       	add	r0, r0
     3d6:	88 0b       	sbc	r24, r24
     3d8:	99 0b       	sbc	r25, r25
     3da:	52 d3       	rcall	.+1700   	; 0xa80 <__floatsisf>
     3dc:	9b 01       	movw	r18, r22
     3de:	ac 01       	movw	r20, r24
     3e0:	60 e0       	ldi	r22, 0x00	; 0
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	80 e0       	ldi	r24, 0x00	; 0
     3e6:	90 e4       	ldi	r25, 0x40	; 64
     3e8:	3a d4       	rcall	.+2164   	; 0xc5e <pow>
     3ea:	69 83       	std	Y+1, r22	; 0x01
     3ec:	7a 83       	std	Y+2, r23	; 0x02
     3ee:	8b 83       	std	Y+3, r24	; 0x03
     3f0:	9c 83       	std	Y+4, r25	; 0x04
     3f2:	b1 01       	movw	r22, r2
     3f4:	33 0c       	add	r3, r3
     3f6:	88 0b       	sbc	r24, r24
     3f8:	99 0b       	sbc	r25, r25
     3fa:	42 d3       	rcall	.+1668   	; 0xa80 <__floatsisf>
     3fc:	29 81       	ldd	r18, Y+1	; 0x01
     3fe:	3a 81       	ldd	r19, Y+2	; 0x02
     400:	4b 81       	ldd	r20, Y+3	; 0x03
     402:	5c 81       	ldd	r21, Y+4	; 0x04
     404:	c9 d3       	rcall	.+1938   	; 0xb98 <__mulsf3>
     406:	69 83       	std	Y+1, r22	; 0x01
     408:	7a 83       	std	Y+2, r23	; 0x02
     40a:	8b 83       	std	Y+3, r24	; 0x03
     40c:	9c 83       	std	Y+4, r25	; 0x04
     40e:	2f 81       	ldd	r18, Y+7	; 0x07
     410:	38 85       	ldd	r19, Y+8	; 0x08
     412:	b9 01       	movw	r22, r18
     414:	33 0f       	add	r19, r19
     416:	88 0b       	sbc	r24, r24
     418:	99 0b       	sbc	r25, r25
     41a:	32 d3       	rcall	.+1636   	; 0xa80 <__floatsisf>
     41c:	9b 01       	movw	r18, r22
     41e:	ac 01       	movw	r20, r24
     420:	69 81       	ldd	r22, Y+1	; 0x01
     422:	7a 81       	ldd	r23, Y+2	; 0x02
     424:	8b 81       	ldd	r24, Y+3	; 0x03
     426:	9c 81       	ldd	r25, Y+4	; 0x04
     428:	94 d2       	rcall	.+1320   	; 0x952 <__addsf3>
     42a:	f7 d2       	rcall	.+1518   	; 0xa1a <__fixsfsi>
     42c:	78 87       	std	Y+8, r23	; 0x08
     42e:	6f 83       	std	Y+7, r22	; 0x07
		++i;
     430:	3f ef       	ldi	r19, 0xFF	; 255
     432:	63 1a       	sub	r6, r19
	PORTC = screen0;
}
int convert(long long n)
{
	int dec = 0, i = 0, rem;
	while (n != 0) {
     434:	73 0a       	sbc	r7, r19
     436:	2c 2d       	mov	r18, r12
     438:	3d 2d       	mov	r19, r13
     43a:	4b 2d       	mov	r20, r11
     43c:	5a 2d       	mov	r21, r10
     43e:	6e 2d       	mov	r22, r14
     440:	7f 2d       	mov	r23, r15
     442:	80 2f       	mov	r24, r16
     444:	91 2f       	mov	r25, r17
     446:	a0 e0       	ldi	r26, 0x00	; 0
     448:	e5 d6       	rcall	.+3530   	; 0x1214 <__cmpdi2_s8>
     44a:	09 f0       	breq	.+2      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     44c:	92 cf       	rjmp	.-220    	; 0x372 <convert+0x54>
     44e:	02 c0       	rjmp	.+4      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
	PORTD = 0b00000000;
	PORTC = screen0;
}
int convert(long long n)
{
	int dec = 0, i = 0, rem;
     450:	18 86       	std	Y+8, r1	; 0x08
     452:	1f 82       	std	Y+7, r1	; 0x07
		n /= 10;
		dec += rem * pow(2, i);
		++i;
	}
	return dec;
     454:	8f 81       	ldd	r24, Y+7	; 0x07
     456:	98 85       	ldd	r25, Y+8	; 0x08
     458:	2a 96       	adiw	r28, 0x0a	; 10
     45a:	0f b6       	in	r0, 0x3f	; 63
     45c:	f8 94       	cli
     45e:	de bf       	out	0x3e, r29	; 62
     460:	0f be       	out	0x3f, r0	; 63
     462:	cd bf       	out	0x3d, r28	; 61
     464:	df 91       	pop	r29
     466:	cf 91       	pop	r28
     468:	1f 91       	pop	r17
     46a:	0f 91       	pop	r16
     46c:	ff 90       	pop	r15
     46e:	ef 90       	pop	r14
     470:	df 90       	pop	r13
     472:	cf 90       	pop	r12
     474:	bf 90       	pop	r11
     476:	af 90       	pop	r10
     478:	9f 90       	pop	r9
     47a:	8f 90       	pop	r8
     47c:	7f 90       	pop	r7
     47e:	6f 90       	pop	r6
     480:	5f 90       	pop	r5
     482:	4f 90       	pop	r4
     484:	3f 90       	pop	r3
     486:	2f 90       	pop	r2
     488:	08 95       	ret

0000048a <main>:
	analog = 0;
}

/*This is our main function where there is a case/switch that will operate acording to the switches that are pressed*/
int main(void)
{
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	00 d0       	rcall	.+0      	; 0x490 <main+0x6>
     490:	1f 92       	push	r1
     492:	cd b7       	in	r28, 0x3d	; 61
     494:	de b7       	in	r29, 0x3e	; 62
	inic();
     496:	5a de       	rcall	.-844    	; 0x14c <inic>
			switch_=0;
			/*Changes the motor speed*/
			OCR2 = DC(motor);
		}
		while(analog == 1){
		screen0 = 0b11000010;
     498:	0f 2e       	mov	r0, r31
     49a:	f2 ec       	ldi	r31, 0xC2	; 194
     49c:	2f 2e       	mov	r2, r31
     49e:	f0 2d       	mov	r31, r0
     4a0:	64 c0       	rjmp	.+200    	; 0x56a <main+0xe0>
	inic();
	
	while (1)
	{
		while(analog == 0){
		screen0= 0b10010000;
     4a2:	20 e9       	ldi	r18, 0x90	; 144
     4a4:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <screen0>
		switch(switch_)
     4a8:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <switch_>
     4ac:	82 30       	cpi	r24, 0x02	; 2
     4ae:	d9 f0       	breq	.+54     	; 0x4e6 <main+0x5c>
     4b0:	18 f4       	brcc	.+6      	; 0x4b8 <main+0x2e>
     4b2:	81 30       	cpi	r24, 0x01	; 1
     4b4:	39 f0       	breq	.+14     	; 0x4c4 <main+0x3a>
     4b6:	4d c0       	rjmp	.+154    	; 0x552 <main+0xc8>
     4b8:	83 30       	cpi	r24, 0x03	; 3
     4ba:	31 f1       	breq	.+76     	; 0x508 <main+0x7e>
     4bc:	84 30       	cpi	r24, 0x04	; 4
     4be:	09 f4       	brne	.+2      	; 0x4c2 <main+0x38>
     4c0:	3f c0       	rjmp	.+126    	; 0x540 <main+0xb6>
     4c2:	47 c0       	rjmp	.+142    	; 0x552 <main+0xc8>
		{
			/*Switch 1 will make the motor rotate at 25% of its nominal speed, and save the value "25" in variables
			 so it is displayed in the 7 segment display*/
			case 1:	
			screen3 = display[5];
     4c4:	82 e9       	ldi	r24, 0x92	; 146
     4c6:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <screen3>
			screen2 = display[2];
     4ca:	84 ea       	ldi	r24, 0xA4	; 164
     4cc:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <screen2>
			if(negative == 1)
     4d0:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <negative>
     4d4:	81 30       	cpi	r24, 0x01	; 1
     4d6:	19 f4       	brne	.+6      	; 0x4de <main+0x54>
			{
				screen1 = display[10];
     4d8:	8f eb       	ldi	r24, 0xBF	; 191
     4da:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <screen1>
			}
			motor = 25;
     4de:	89 e1       	ldi	r24, 0x19	; 25
     4e0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <motor>
			break;
     4e4:	36 c0       	rjmp	.+108    	; 0x552 <main+0xc8>
			
			/*Switch 2 will make the motor rotate at 25% of its nominal speed, and save the value "25" in variables
			 so it is displayed in the 7 segment display*/
			case 2:	
			screen3 = display[0];
     4e6:	a0 ec       	ldi	r26, 0xC0	; 192
     4e8:	a0 93 1f 01 	sts	0x011F, r26	; 0x80011f <screen3>
			screen2 = display[7];
     4ec:	28 ef       	ldi	r18, 0xF8	; 248
     4ee:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <screen2>
			if(negative == 1)
     4f2:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <negative>
     4f6:	81 30       	cpi	r24, 0x01	; 1
     4f8:	19 f4       	brne	.+6      	; 0x500 <main+0x76>
			{
				screen1 = display[10];
     4fa:	8f eb       	ldi	r24, 0xBF	; 191
     4fc:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <screen1>
			}
			motor = 70;
     500:	a6 e4       	ldi	r26, 0x46	; 70
     502:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <motor>
			break;
     506:	25 c0       	rjmp	.+74     	; 0x552 <main+0xc8>
			
			/*Switch 3 will check what value is being currently displayed ( "-" or " " ) and call the function that will make the motor
			switch the direction of its rotation*/
			case 3:	
			if(flag==0) break;
     508:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <flag>
     50c:	88 23       	and	r24, r24
     50e:	09 f1       	breq	.+66     	; 0x552 <main+0xc8>
			flag = 0;
     510:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <flag>
			if(screen1 == display[11] && negative == 0)
     514:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <screen1>
     518:	8f 3f       	cpi	r24, 0xFF	; 255
     51a:	59 f4       	brne	.+22     	; 0x532 <main+0xa8>
     51c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <negative>
     520:	81 11       	cpse	r24, r1
     522:	07 c0       	rjmp	.+14     	; 0x532 <main+0xa8>
			{
				screen1 = display[10];
     524:	2f eb       	ldi	r18, 0xBF	; 191
     526:	20 93 10 01 	sts	0x0110, r18	; 0x800110 <screen1>
				negative = 1;
     52a:	81 e0       	ldi	r24, 0x01	; 1
     52c:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <negative>
     530:	05 c0       	rjmp	.+10     	; 0x53c <main+0xb2>
			}else
			{
				screen1 = display[11];
     532:	af ef       	ldi	r26, 0xFF	; 255
     534:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <screen1>
				negative = 0;
     538:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <negative>
			}
			mudar_rot();
     53c:	82 de       	rcall	.-764    	; 0x242 <mudar_rot>
			break;
     53e:	09 c0       	rjmp	.+18     	; 0x552 <main+0xc8>
			/*Switch 4 will make the motor stop and turn of the display*/
			case 4:	
			screen3 = display[11];
     540:	2f ef       	ldi	r18, 0xFF	; 255
     542:	20 93 1f 01 	sts	0x011F, r18	; 0x80011f <screen3>
			screen2 = display[11];
     546:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <screen2>
			screen1 = display[11];
     54a:	20 93 10 01 	sts	0x0110, r18	; 0x800110 <screen1>
			motor = 0;
     54e:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <motor>
			break;
			}
			/*Resets the value of the switch*/
			switch_=0;
     552:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <switch_>
			/*Changes the motor speed*/
			OCR2 = DC(motor);
     556:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <motor>
     55a:	af ef       	ldi	r26, 0xFF	; 255
     55c:	a8 9f       	mul	r26, r24
     55e:	c0 01       	movw	r24, r0
     560:	11 24       	eor	r1, r1
     562:	64 e6       	ldi	r22, 0x64	; 100
     564:	70 e0       	ldi	r23, 0x00	; 0
     566:	48 d5       	rcall	.+2704   	; 0xff8 <__divmodhi4>
     568:	63 bd       	out	0x23, r22	; 35
{
	inic();
	
	while (1)
	{
		while(analog == 0){
     56a:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
     56e:	88 23       	and	r24, r24
     570:	09 f4       	brne	.+2      	; 0x574 <main+0xea>
     572:	97 cf       	rjmp	.-210    	; 0x4a2 <main+0x18>
			/*Resets the value of the switch*/
			switch_=0;
			/*Changes the motor speed*/
			OCR2 = DC(motor);
		}
		while(analog == 1){
     574:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
     578:	81 30       	cpi	r24, 0x01	; 1
     57a:	b9 f7       	brne	.-18     	; 0x56a <main+0xe0>
		screen0 = 0b11000010;
     57c:	20 92 1a 01 	sts	0x011A, r2	; 0x80011a <screen0>
		//read_analog();
		if(negative == 1) flag1 = 1;
     580:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <negative>
     584:	81 30       	cpi	r24, 0x01	; 1
     586:	19 f4       	brne	.+6      	; 0x58e <main+0x104>
     588:	21 e0       	ldi	r18, 0x01	; 1
     58a:	20 93 1b 01 	sts	0x011B, r18	; 0x80011b <flag1>
		AD = (leituraH << 8) + leituraL;
		AD = convert(AD);
     58e:	84 2f       	mov	r24, r20
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	98 2f       	mov	r25, r24
     594:	88 27       	eor	r24, r24
     596:	85 0f       	add	r24, r21
     598:	91 1d       	adc	r25, r1
     59a:	e9 2f       	mov	r30, r25
     59c:	ee 0f       	add	r30, r30
     59e:	ee 0b       	sbc	r30, r30
     5a0:	28 2f       	mov	r18, r24
     5a2:	39 2f       	mov	r19, r25
     5a4:	4e 2f       	mov	r20, r30
     5a6:	5e 2f       	mov	r21, r30
     5a8:	6e 2f       	mov	r22, r30
     5aa:	7e 2f       	mov	r23, r30
     5ac:	8e 2f       	mov	r24, r30
     5ae:	9e 2f       	mov	r25, r30
     5b0:	b6 de       	rcall	.-660    	; 0x31e <convert>
     5b2:	fc 01       	movw	r30, r24
     5b4:	1f 2f       	mov	r17, r31
     5b6:	11 0f       	add	r17, r17
     5b8:	11 0b       	sbc	r17, r17
     5ba:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <AD>
     5be:	f0 93 21 01 	sts	0x0121, r31	; 0x800121 <AD+0x1>
     5c2:	10 93 22 01 	sts	0x0122, r17	; 0x800122 <AD+0x2>
     5c6:	10 93 23 01 	sts	0x0123, r17	; 0x800123 <AD+0x3>
     5ca:	10 93 24 01 	sts	0x0124, r17	; 0x800124 <AD+0x4>
     5ce:	10 93 25 01 	sts	0x0125, r17	; 0x800125 <AD+0x5>
     5d2:	10 93 26 01 	sts	0x0126, r17	; 0x800126 <AD+0x6>
     5d6:	10 93 27 01 	sts	0x0127, r17	; 0x800127 <AD+0x7>
		temp = AD;
     5da:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <temp>
     5de:	f0 93 13 01 	sts	0x0113, r31	; 0x800113 <temp+0x1>
     5e2:	10 93 14 01 	sts	0x0114, r17	; 0x800114 <temp+0x2>
     5e6:	10 93 15 01 	sts	0x0115, r17	; 0x800115 <temp+0x3>
     5ea:	10 93 16 01 	sts	0x0116, r17	; 0x800116 <temp+0x4>
     5ee:	10 93 17 01 	sts	0x0117, r17	; 0x800117 <temp+0x5>
     5f2:	10 93 18 01 	sts	0x0118, r17	; 0x800118 <temp+0x6>
     5f6:	10 93 19 01 	sts	0x0119, r17	; 0x800119 <temp+0x7>
		if(AD == 0 || AD == 1024){
     5fa:	9b 7f       	andi	r25, 0xFB	; 251
     5fc:	89 2b       	or	r24, r25
     5fe:	31 f4       	brne	.+12     	; 0x60c <main+0x182>
			screen3 = display[12];
     600:	80 e7       	ldi	r24, 0x70	; 112
     602:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <screen3>
			screen2 = display[12];
     606:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <screen2>
     60a:	58 c1       	rjmp	.+688    	; 0x8bc <main+0x432>
		}
		else{
			if(AD<=481){
     60c:	2e 2f       	mov	r18, r30
     60e:	3f 2f       	mov	r19, r31
     610:	41 2f       	mov	r20, r17
     612:	51 2f       	mov	r21, r17
     614:	61 2f       	mov	r22, r17
     616:	71 2f       	mov	r23, r17
     618:	81 2f       	mov	r24, r17
     61a:	91 2f       	mov	r25, r17
     61c:	21 3e       	cpi	r18, 0xE1	; 225
     61e:	a1 e0       	ldi	r26, 0x01	; 1
     620:	3a 07       	cpc	r19, r26
     622:	41 05       	cpc	r20, r1
     624:	51 05       	cpc	r21, r1
     626:	61 05       	cpc	r22, r1
     628:	71 05       	cpc	r23, r1
     62a:	81 05       	cpc	r24, r1
     62c:	91 05       	cpc	r25, r1
     62e:	11 f0       	breq	.+4      	; 0x634 <main+0x1aa>
     630:	0c f0       	brlt	.+2      	; 0x634 <main+0x1aa>
     632:	6d c0       	rjmp	.+218    	; 0x70e <main+0x284>
				temp = (481-temp)/481*100;
     634:	21 ee       	ldi	r18, 0xE1	; 225
     636:	31 e0       	ldi	r19, 0x01	; 1
     638:	40 e0       	ldi	r20, 0x00	; 0
     63a:	50 e0       	ldi	r21, 0x00	; 0
     63c:	60 e0       	ldi	r22, 0x00	; 0
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	ae 2e       	mov	r10, r30
     646:	bf 2e       	mov	r11, r31
     648:	c1 2e       	mov	r12, r17
     64a:	d1 2e       	mov	r13, r17
     64c:	e1 2e       	mov	r14, r17
     64e:	f1 2e       	mov	r15, r17
     650:	01 2f       	mov	r16, r17
     652:	d7 d5       	rcall	.+2990   	; 0x1202 <__subdi3>
     654:	0f 2e       	mov	r0, r31
     656:	f1 ee       	ldi	r31, 0xE1	; 225
     658:	af 2e       	mov	r10, r31
     65a:	f0 2d       	mov	r31, r0
     65c:	bb 24       	eor	r11, r11
     65e:	b3 94       	inc	r11
     660:	c1 2c       	mov	r12, r1
     662:	d1 2c       	mov	r13, r1
     664:	e1 2c       	mov	r14, r1
     666:	f1 2c       	mov	r15, r1
     668:	00 e0       	ldi	r16, 0x00	; 0
     66a:	10 e0       	ldi	r17, 0x00	; 0
     66c:	da d4       	rcall	.+2484   	; 0x1022 <__divdi3>
     66e:	02 e0       	ldi	r16, 0x02	; 2
     670:	a6 d5       	rcall	.+2892   	; 0x11be <__ashldi3>
     672:	72 2e       	mov	r7, r18
     674:	83 2e       	mov	r8, r19
     676:	94 2e       	mov	r9, r20
     678:	59 83       	std	Y+1, r21	; 0x01
     67a:	b6 2f       	mov	r27, r22
     67c:	a7 2f       	mov	r26, r23
     67e:	f8 2f       	mov	r31, r24
     680:	e9 2f       	mov	r30, r25
     682:	9d d5       	rcall	.+2874   	; 0x11be <__ashldi3>
     684:	a2 2e       	mov	r10, r18
     686:	b3 2e       	mov	r11, r19
     688:	c4 2e       	mov	r12, r20
     68a:	d5 2e       	mov	r13, r21
     68c:	e6 2e       	mov	r14, r22
     68e:	f7 2e       	mov	r15, r23
     690:	08 2f       	mov	r16, r24
     692:	19 2f       	mov	r17, r25
     694:	27 2d       	mov	r18, r7
     696:	38 2d       	mov	r19, r8
     698:	49 2d       	mov	r20, r9
     69a:	59 81       	ldd	r21, Y+1	; 0x01
     69c:	6b 2f       	mov	r22, r27
     69e:	7a 2f       	mov	r23, r26
     6a0:	8f 2f       	mov	r24, r31
     6a2:	9e 2f       	mov	r25, r30
     6a4:	a5 d5       	rcall	.+2890   	; 0x11f0 <__adddi3>
     6a6:	72 2e       	mov	r7, r18
     6a8:	83 2e       	mov	r8, r19
     6aa:	94 2e       	mov	r9, r20
     6ac:	59 83       	std	Y+1, r21	; 0x01
     6ae:	b6 2f       	mov	r27, r22
     6b0:	a7 2f       	mov	r26, r23
     6b2:	f8 2f       	mov	r31, r24
     6b4:	e9 2f       	mov	r30, r25
     6b6:	02 e0       	ldi	r16, 0x02	; 2
     6b8:	82 d5       	rcall	.+2820   	; 0x11be <__ashldi3>
     6ba:	a2 2e       	mov	r10, r18
     6bc:	b3 2e       	mov	r11, r19
     6be:	c4 2e       	mov	r12, r20
     6c0:	d5 2e       	mov	r13, r21
     6c2:	e6 2e       	mov	r14, r22
     6c4:	f7 2e       	mov	r15, r23
     6c6:	08 2f       	mov	r16, r24
     6c8:	19 2f       	mov	r17, r25
     6ca:	27 2d       	mov	r18, r7
     6cc:	38 2d       	mov	r19, r8
     6ce:	49 2d       	mov	r20, r9
     6d0:	59 81       	ldd	r21, Y+1	; 0x01
     6d2:	6b 2f       	mov	r22, r27
     6d4:	7a 2f       	mov	r23, r26
     6d6:	8f 2f       	mov	r24, r31
     6d8:	9e 2f       	mov	r25, r30
     6da:	8a d5       	rcall	.+2836   	; 0x11f0 <__adddi3>
     6dc:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <temp>
     6e0:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <temp+0x1>
     6e4:	40 93 14 01 	sts	0x0114, r20	; 0x800114 <temp+0x2>
     6e8:	50 93 15 01 	sts	0x0115, r21	; 0x800115 <temp+0x3>
     6ec:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <temp+0x4>
     6f0:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <temp+0x5>
     6f4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <temp+0x6>
     6f8:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <temp+0x7>
				if(flag1 == 0)
     6fc:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <flag1>
     700:	81 11       	cpse	r24, r1
     702:	01 c0       	rjmp	.+2      	; 0x706 <main+0x27c>
				{
					mudar_rot();
     704:	9e dd       	rcall	.-1220   	; 0x242 <mudar_rot>
     706:	21 e0       	ldi	r18, 0x01	; 1
				}
				flag1 = 1;
     708:	20 93 1b 01 	sts	0x011B, r18	; 0x80011b <flag1>
     70c:	8f c0       	rjmp	.+286    	; 0x82c <main+0x3a2>
     70e:	2e 2f       	mov	r18, r30
			}
			else{
				if(temp<543)
     710:	3f 2f       	mov	r19, r31
     712:	41 2f       	mov	r20, r17
     714:	51 2f       	mov	r21, r17
     716:	61 2f       	mov	r22, r17
     718:	71 2f       	mov	r23, r17
     71a:	81 2f       	mov	r24, r17
     71c:	91 2f       	mov	r25, r17
     71e:	2e 31       	cpi	r18, 0x1E	; 30
     720:	a2 e0       	ldi	r26, 0x02	; 2
     722:	3a 07       	cpc	r19, r26
     724:	41 05       	cpc	r20, r1
     726:	51 05       	cpc	r21, r1
     728:	61 05       	cpc	r22, r1
     72a:	71 05       	cpc	r23, r1
     72c:	81 05       	cpc	r24, r1
     72e:	91 05       	cpc	r25, r1
     730:	09 f0       	breq	.+2      	; 0x734 <main+0x2aa>
     732:	8c f4       	brge	.+34     	; 0x756 <main+0x2cc>
     734:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <temp>
				{
					temp = 0;
     738:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <temp+0x1>
     73c:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <temp+0x2>
     740:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <temp+0x3>
     744:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <temp+0x4>
     748:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <temp+0x5>
     74c:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <temp+0x6>
     750:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <temp+0x7>
     754:	6b c0       	rjmp	.+214    	; 0x82c <main+0x3a2>
     756:	2e 2f       	mov	r18, r30
				}
				else{
					temp = (temp-542)/481*100;
     758:	3f 2f       	mov	r19, r31
     75a:	41 2f       	mov	r20, r17
     75c:	51 2f       	mov	r21, r17
     75e:	61 2f       	mov	r22, r17
     760:	71 2f       	mov	r23, r17
     762:	81 2f       	mov	r24, r17
     764:	91 2f       	mov	r25, r17
     766:	2e 51       	subi	r18, 0x1E	; 30
     768:	32 40       	sbci	r19, 0x02	; 2
     76a:	41 09       	sbc	r20, r1
     76c:	51 09       	sbc	r21, r1
     76e:	61 09       	sbc	r22, r1
     770:	71 09       	sbc	r23, r1
     772:	81 09       	sbc	r24, r1
     774:	91 09       	sbc	r25, r1
     776:	0f 2e       	mov	r0, r31
     778:	f1 ee       	ldi	r31, 0xE1	; 225
     77a:	af 2e       	mov	r10, r31
     77c:	f0 2d       	mov	r31, r0
     77e:	bb 24       	eor	r11, r11
     780:	b3 94       	inc	r11
     782:	c1 2c       	mov	r12, r1
     784:	d1 2c       	mov	r13, r1
     786:	e1 2c       	mov	r14, r1
     788:	f1 2c       	mov	r15, r1
     78a:	00 e0       	ldi	r16, 0x00	; 0
     78c:	10 e0       	ldi	r17, 0x00	; 0
     78e:	49 d4       	rcall	.+2194   	; 0x1022 <__divdi3>
     790:	02 e0       	ldi	r16, 0x02	; 2
     792:	15 d5       	rcall	.+2602   	; 0x11be <__ashldi3>
     794:	72 2e       	mov	r7, r18
     796:	83 2e       	mov	r8, r19
     798:	94 2e       	mov	r9, r20
     79a:	59 83       	std	Y+1, r21	; 0x01
     79c:	b6 2f       	mov	r27, r22
     79e:	a7 2f       	mov	r26, r23
     7a0:	f8 2f       	mov	r31, r24
     7a2:	e9 2f       	mov	r30, r25
     7a4:	0c d5       	rcall	.+2584   	; 0x11be <__ashldi3>
     7a6:	a2 2e       	mov	r10, r18
     7a8:	b3 2e       	mov	r11, r19
     7aa:	c4 2e       	mov	r12, r20
     7ac:	d5 2e       	mov	r13, r21
     7ae:	e6 2e       	mov	r14, r22
     7b0:	f7 2e       	mov	r15, r23
     7b2:	08 2f       	mov	r16, r24
     7b4:	19 2f       	mov	r17, r25
     7b6:	27 2d       	mov	r18, r7
     7b8:	38 2d       	mov	r19, r8
     7ba:	49 2d       	mov	r20, r9
     7bc:	59 81       	ldd	r21, Y+1	; 0x01
     7be:	6b 2f       	mov	r22, r27
     7c0:	7a 2f       	mov	r23, r26
     7c2:	8f 2f       	mov	r24, r31
     7c4:	9e 2f       	mov	r25, r30
     7c6:	14 d5       	rcall	.+2600   	; 0x11f0 <__adddi3>
     7c8:	72 2e       	mov	r7, r18
     7ca:	83 2e       	mov	r8, r19
     7cc:	94 2e       	mov	r9, r20
     7ce:	59 83       	std	Y+1, r21	; 0x01
     7d0:	b6 2f       	mov	r27, r22
     7d2:	a7 2f       	mov	r26, r23
     7d4:	f8 2f       	mov	r31, r24
     7d6:	e9 2f       	mov	r30, r25
     7d8:	02 e0       	ldi	r16, 0x02	; 2
     7da:	f1 d4       	rcall	.+2530   	; 0x11be <__ashldi3>
     7dc:	a2 2e       	mov	r10, r18
     7de:	b3 2e       	mov	r11, r19
     7e0:	c4 2e       	mov	r12, r20
     7e2:	d5 2e       	mov	r13, r21
     7e4:	e6 2e       	mov	r14, r22
     7e6:	f7 2e       	mov	r15, r23
     7e8:	08 2f       	mov	r16, r24
     7ea:	19 2f       	mov	r17, r25
     7ec:	27 2d       	mov	r18, r7
     7ee:	38 2d       	mov	r19, r8
     7f0:	49 2d       	mov	r20, r9
     7f2:	59 81       	ldd	r21, Y+1	; 0x01
     7f4:	6b 2f       	mov	r22, r27
     7f6:	7a 2f       	mov	r23, r26
     7f8:	8f 2f       	mov	r24, r31
     7fa:	9e 2f       	mov	r25, r30
     7fc:	f9 d4       	rcall	.+2546   	; 0x11f0 <__adddi3>
     7fe:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <temp>
     802:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <temp+0x1>
     806:	40 93 14 01 	sts	0x0114, r20	; 0x800114 <temp+0x2>
     80a:	50 93 15 01 	sts	0x0115, r21	; 0x800115 <temp+0x3>
     80e:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <temp+0x4>
     812:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <temp+0x5>
     816:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <temp+0x6>
     81a:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <temp+0x7>
					if(flag1 == 1)
     81e:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <flag1>
     822:	81 30       	cpi	r24, 0x01	; 1
     824:	09 f4       	brne	.+2      	; 0x828 <main+0x39e>
					{
						mudar_rot();
     826:	0d dd       	rcall	.-1510   	; 0x242 <mudar_rot>
     828:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <flag1>
					}
					flag1 = 0;
     82c:	30 90 12 01 	lds	r3, 0x0112	; 0x800112 <temp>
				}
			}
			screen3=display[temp%10];
     830:	40 90 13 01 	lds	r4, 0x0113	; 0x800113 <temp+0x1>
     834:	50 90 14 01 	lds	r5, 0x0114	; 0x800114 <temp+0x2>
     838:	60 90 15 01 	lds	r6, 0x0115	; 0x800115 <temp+0x3>
     83c:	70 90 16 01 	lds	r7, 0x0116	; 0x800116 <temp+0x4>
     840:	20 91 17 01 	lds	r18, 0x0117	; 0x800117 <temp+0x5>
     844:	29 83       	std	Y+1, r18	; 0x01
     846:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <temp+0x6>
     84a:	8a 83       	std	Y+2, r24	; 0x02
     84c:	a0 91 19 01 	lds	r26, 0x0119	; 0x800119 <temp+0x7>
     850:	ab 83       	std	Y+3, r26	; 0x03
     852:	0f 2e       	mov	r0, r31
     854:	fa e0       	ldi	r31, 0x0A	; 10
     856:	af 2e       	mov	r10, r31
     858:	f0 2d       	mov	r31, r0
     85a:	b1 2c       	mov	r11, r1
     85c:	c1 2c       	mov	r12, r1
     85e:	d1 2c       	mov	r13, r1
     860:	e1 2c       	mov	r14, r1
     862:	f1 2c       	mov	r15, r1
     864:	00 e0       	ldi	r16, 0x00	; 0
     866:	10 e0       	ldi	r17, 0x00	; 0
     868:	23 2d       	mov	r18, r3
     86a:	34 2d       	mov	r19, r4
     86c:	45 2d       	mov	r20, r5
     86e:	56 2d       	mov	r21, r6
     870:	67 2d       	mov	r22, r7
     872:	79 81       	ldd	r23, Y+1	; 0x01
     874:	9a 2f       	mov	r25, r26
     876:	d3 d3       	rcall	.+1958   	; 0x101e <__moddi3>
     878:	82 2e       	mov	r8, r18
     87a:	93 2e       	mov	r9, r19
     87c:	f4 01       	movw	r30, r8
     87e:	e0 50       	subi	r30, 0x00	; 0
     880:	ff 4f       	sbci	r31, 0xFF	; 255
     882:	80 81       	ld	r24, Z
     884:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <screen3>
			screen2=display[temp/10];
     888:	0f 2e       	mov	r0, r31
     88a:	fa e0       	ldi	r31, 0x0A	; 10
     88c:	af 2e       	mov	r10, r31
     88e:	f0 2d       	mov	r31, r0
     890:	b1 2c       	mov	r11, r1
     892:	c1 2c       	mov	r12, r1
     894:	d1 2c       	mov	r13, r1
     896:	e1 2c       	mov	r14, r1
     898:	f1 2c       	mov	r15, r1
     89a:	23 2d       	mov	r18, r3
     89c:	34 2d       	mov	r19, r4
     89e:	45 2d       	mov	r20, r5
     8a0:	56 2d       	mov	r21, r6
     8a2:	67 2d       	mov	r22, r7
     8a4:	79 81       	ldd	r23, Y+1	; 0x01
     8a6:	8a 81       	ldd	r24, Y+2	; 0x02
     8a8:	9b 81       	ldd	r25, Y+3	; 0x03
     8aa:	bb d3       	rcall	.+1910   	; 0x1022 <__divdi3>
     8ac:	82 2e       	mov	r8, r18
     8ae:	93 2e       	mov	r9, r19
     8b0:	f4 01       	movw	r30, r8
     8b2:	e0 50       	subi	r30, 0x00	; 0
     8b4:	ff 4f       	sbci	r31, 0xFF	; 255
     8b6:	80 81       	ld	r24, Z
     8b8:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <screen2>
     8bc:	a0 90 20 01 	lds	r10, 0x0120	; 0x800120 <AD>
		}
		OCR2 = DC(AD);
     8c0:	b0 90 21 01 	lds	r11, 0x0121	; 0x800121 <AD+0x1>
     8c4:	c0 90 22 01 	lds	r12, 0x0122	; 0x800122 <AD+0x2>
     8c8:	d0 90 23 01 	lds	r13, 0x0123	; 0x800123 <AD+0x3>
     8cc:	e0 90 24 01 	lds	r14, 0x0124	; 0x800124 <AD+0x4>
     8d0:	f0 90 25 01 	lds	r15, 0x0125	; 0x800125 <AD+0x5>
     8d4:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <AD+0x6>
     8d8:	10 91 27 01 	lds	r17, 0x0127	; 0x800127 <AD+0x7>
     8dc:	2a 2d       	mov	r18, r10
     8de:	3b 2d       	mov	r19, r11
     8e0:	4c 2d       	mov	r20, r12
     8e2:	5d 2d       	mov	r21, r13
     8e4:	6e 2d       	mov	r22, r14
     8e6:	7f 2d       	mov	r23, r15
     8e8:	8e 2f       	mov	r24, r30
     8ea:	91 2f       	mov	r25, r17
     8ec:	04 e0       	ldi	r16, 0x04	; 4
     8ee:	67 d4       	rcall	.+2254   	; 0x11be <__ashldi3>
     8f0:	0e 2f       	mov	r16, r30
     8f2:	87 d4       	rcall	.+2318   	; 0x1202 <__subdi3>
     8f4:	72 2e       	mov	r7, r18
     8f6:	83 2e       	mov	r8, r19
     8f8:	94 2e       	mov	r9, r20
     8fa:	59 83       	std	Y+1, r21	; 0x01
     8fc:	b6 2f       	mov	r27, r22
     8fe:	a7 2f       	mov	r26, r23
     900:	f8 2f       	mov	r31, r24
     902:	e9 2f       	mov	r30, r25
     904:	04 e0       	ldi	r16, 0x04	; 4
     906:	5b d4       	rcall	.+2230   	; 0x11be <__ashldi3>
     908:	a2 2e       	mov	r10, r18
     90a:	b3 2e       	mov	r11, r19
     90c:	c4 2e       	mov	r12, r20
     90e:	d5 2e       	mov	r13, r21
     910:	e6 2e       	mov	r14, r22
     912:	f7 2e       	mov	r15, r23
     914:	08 2f       	mov	r16, r24
     916:	19 2f       	mov	r17, r25
     918:	27 2d       	mov	r18, r7
     91a:	38 2d       	mov	r19, r8
     91c:	49 2d       	mov	r20, r9
     91e:	59 81       	ldd	r21, Y+1	; 0x01
     920:	6b 2f       	mov	r22, r27
     922:	7a 2f       	mov	r23, r26
     924:	8f 2f       	mov	r24, r31
     926:	9e 2f       	mov	r25, r30
     928:	63 d4       	rcall	.+2246   	; 0x11f0 <__adddi3>
     92a:	0f 2e       	mov	r0, r31
     92c:	f4 e6       	ldi	r31, 0x64	; 100
     92e:	af 2e       	mov	r10, r31
     930:	f0 2d       	mov	r31, r0
     932:	b1 2c       	mov	r11, r1
     934:	c1 2c       	mov	r12, r1
     936:	d1 2c       	mov	r13, r1
     938:	e1 2c       	mov	r14, r1
     93a:	f1 2c       	mov	r15, r1
     93c:	00 e0       	ldi	r16, 0x00	; 0
     93e:	10 e0       	ldi	r17, 0x00	; 0
     940:	70 d3       	rcall	.+1760   	; 0x1022 <__divdi3>
     942:	23 bd       	out	0x23, r18	; 35
     944:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
			/*Resets the value of the switch*/
			switch_=0;
			/*Changes the motor speed*/
			OCR2 = DC(motor);
		}
		while(analog == 1){
     948:	81 30       	cpi	r24, 0x01	; 1
     94a:	09 f4       	brne	.+2      	; 0x94e <main+0x4c4>
     94c:	17 ce       	rjmp	.-978    	; 0x57c <main+0xf2>
     94e:	0d ce       	rjmp	.-998    	; 0x56a <main+0xe0>

00000950 <__subsf3>:
     950:	50 58       	subi	r21, 0x80	; 128

00000952 <__addsf3>:
     952:	bb 27       	eor	r27, r27
     954:	aa 27       	eor	r26, r26
     956:	0e d0       	rcall	.+28     	; 0x974 <__addsf3x>
     958:	e5 c0       	rjmp	.+458    	; 0xb24 <__fp_round>
     95a:	d6 d0       	rcall	.+428    	; 0xb08 <__fp_pscA>
     95c:	30 f0       	brcs	.+12     	; 0x96a <__addsf3+0x18>
     95e:	db d0       	rcall	.+438    	; 0xb16 <__fp_pscB>
     960:	20 f0       	brcs	.+8      	; 0x96a <__addsf3+0x18>
     962:	31 f4       	brne	.+12     	; 0x970 <__addsf3+0x1e>
     964:	9f 3f       	cpi	r25, 0xFF	; 255
     966:	11 f4       	brne	.+4      	; 0x96c <__addsf3+0x1a>
     968:	1e f4       	brtc	.+6      	; 0x970 <__addsf3+0x1e>
     96a:	cb c0       	rjmp	.+406    	; 0xb02 <__fp_nan>
     96c:	0e f4       	brtc	.+2      	; 0x970 <__addsf3+0x1e>
     96e:	e0 95       	com	r30
     970:	e7 fb       	bst	r30, 7
     972:	c1 c0       	rjmp	.+386    	; 0xaf6 <__fp_inf>

00000974 <__addsf3x>:
     974:	e9 2f       	mov	r30, r25
     976:	e7 d0       	rcall	.+462    	; 0xb46 <__fp_split3>
     978:	80 f3       	brcs	.-32     	; 0x95a <__addsf3+0x8>
     97a:	ba 17       	cp	r27, r26
     97c:	62 07       	cpc	r22, r18
     97e:	73 07       	cpc	r23, r19
     980:	84 07       	cpc	r24, r20
     982:	95 07       	cpc	r25, r21
     984:	18 f0       	brcs	.+6      	; 0x98c <__addsf3x+0x18>
     986:	71 f4       	brne	.+28     	; 0x9a4 <__addsf3x+0x30>
     988:	9e f5       	brtc	.+102    	; 0x9f0 <__addsf3x+0x7c>
     98a:	ff c0       	rjmp	.+510    	; 0xb8a <__fp_zero>
     98c:	0e f4       	brtc	.+2      	; 0x990 <__addsf3x+0x1c>
     98e:	e0 95       	com	r30
     990:	0b 2e       	mov	r0, r27
     992:	ba 2f       	mov	r27, r26
     994:	a0 2d       	mov	r26, r0
     996:	0b 01       	movw	r0, r22
     998:	b9 01       	movw	r22, r18
     99a:	90 01       	movw	r18, r0
     99c:	0c 01       	movw	r0, r24
     99e:	ca 01       	movw	r24, r20
     9a0:	a0 01       	movw	r20, r0
     9a2:	11 24       	eor	r1, r1
     9a4:	ff 27       	eor	r31, r31
     9a6:	59 1b       	sub	r21, r25
     9a8:	99 f0       	breq	.+38     	; 0x9d0 <__addsf3x+0x5c>
     9aa:	59 3f       	cpi	r21, 0xF9	; 249
     9ac:	50 f4       	brcc	.+20     	; 0x9c2 <__addsf3x+0x4e>
     9ae:	50 3e       	cpi	r21, 0xE0	; 224
     9b0:	68 f1       	brcs	.+90     	; 0xa0c <__addsf3x+0x98>
     9b2:	1a 16       	cp	r1, r26
     9b4:	f0 40       	sbci	r31, 0x00	; 0
     9b6:	a2 2f       	mov	r26, r18
     9b8:	23 2f       	mov	r18, r19
     9ba:	34 2f       	mov	r19, r20
     9bc:	44 27       	eor	r20, r20
     9be:	58 5f       	subi	r21, 0xF8	; 248
     9c0:	f3 cf       	rjmp	.-26     	; 0x9a8 <__addsf3x+0x34>
     9c2:	46 95       	lsr	r20
     9c4:	37 95       	ror	r19
     9c6:	27 95       	ror	r18
     9c8:	a7 95       	ror	r26
     9ca:	f0 40       	sbci	r31, 0x00	; 0
     9cc:	53 95       	inc	r21
     9ce:	c9 f7       	brne	.-14     	; 0x9c2 <__addsf3x+0x4e>
     9d0:	7e f4       	brtc	.+30     	; 0x9f0 <__addsf3x+0x7c>
     9d2:	1f 16       	cp	r1, r31
     9d4:	ba 0b       	sbc	r27, r26
     9d6:	62 0b       	sbc	r22, r18
     9d8:	73 0b       	sbc	r23, r19
     9da:	84 0b       	sbc	r24, r20
     9dc:	ba f0       	brmi	.+46     	; 0xa0c <__addsf3x+0x98>
     9de:	91 50       	subi	r25, 0x01	; 1
     9e0:	a1 f0       	breq	.+40     	; 0xa0a <__addsf3x+0x96>
     9e2:	ff 0f       	add	r31, r31
     9e4:	bb 1f       	adc	r27, r27
     9e6:	66 1f       	adc	r22, r22
     9e8:	77 1f       	adc	r23, r23
     9ea:	88 1f       	adc	r24, r24
     9ec:	c2 f7       	brpl	.-16     	; 0x9de <__addsf3x+0x6a>
     9ee:	0e c0       	rjmp	.+28     	; 0xa0c <__addsf3x+0x98>
     9f0:	ba 0f       	add	r27, r26
     9f2:	62 1f       	adc	r22, r18
     9f4:	73 1f       	adc	r23, r19
     9f6:	84 1f       	adc	r24, r20
     9f8:	48 f4       	brcc	.+18     	; 0xa0c <__addsf3x+0x98>
     9fa:	87 95       	ror	r24
     9fc:	77 95       	ror	r23
     9fe:	67 95       	ror	r22
     a00:	b7 95       	ror	r27
     a02:	f7 95       	ror	r31
     a04:	9e 3f       	cpi	r25, 0xFE	; 254
     a06:	08 f0       	brcs	.+2      	; 0xa0a <__addsf3x+0x96>
     a08:	b3 cf       	rjmp	.-154    	; 0x970 <__addsf3+0x1e>
     a0a:	93 95       	inc	r25
     a0c:	88 0f       	add	r24, r24
     a0e:	08 f0       	brcs	.+2      	; 0xa12 <__addsf3x+0x9e>
     a10:	99 27       	eor	r25, r25
     a12:	ee 0f       	add	r30, r30
     a14:	97 95       	ror	r25
     a16:	87 95       	ror	r24
     a18:	08 95       	ret

00000a1a <__fixsfsi>:
     a1a:	04 d0       	rcall	.+8      	; 0xa24 <__fixunssfsi>
     a1c:	68 94       	set
     a1e:	b1 11       	cpse	r27, r1
     a20:	b5 c0       	rjmp	.+362    	; 0xb8c <__fp_szero>
     a22:	08 95       	ret

00000a24 <__fixunssfsi>:
     a24:	98 d0       	rcall	.+304    	; 0xb56 <__fp_splitA>
     a26:	88 f0       	brcs	.+34     	; 0xa4a <__fixunssfsi+0x26>
     a28:	9f 57       	subi	r25, 0x7F	; 127
     a2a:	90 f0       	brcs	.+36     	; 0xa50 <__fixunssfsi+0x2c>
     a2c:	b9 2f       	mov	r27, r25
     a2e:	99 27       	eor	r25, r25
     a30:	b7 51       	subi	r27, 0x17	; 23
     a32:	a0 f0       	brcs	.+40     	; 0xa5c <__fixunssfsi+0x38>
     a34:	d1 f0       	breq	.+52     	; 0xa6a <__fixunssfsi+0x46>
     a36:	66 0f       	add	r22, r22
     a38:	77 1f       	adc	r23, r23
     a3a:	88 1f       	adc	r24, r24
     a3c:	99 1f       	adc	r25, r25
     a3e:	1a f0       	brmi	.+6      	; 0xa46 <__fixunssfsi+0x22>
     a40:	ba 95       	dec	r27
     a42:	c9 f7       	brne	.-14     	; 0xa36 <__fixunssfsi+0x12>
     a44:	12 c0       	rjmp	.+36     	; 0xa6a <__fixunssfsi+0x46>
     a46:	b1 30       	cpi	r27, 0x01	; 1
     a48:	81 f0       	breq	.+32     	; 0xa6a <__fixunssfsi+0x46>
     a4a:	9f d0       	rcall	.+318    	; 0xb8a <__fp_zero>
     a4c:	b1 e0       	ldi	r27, 0x01	; 1
     a4e:	08 95       	ret
     a50:	9c c0       	rjmp	.+312    	; 0xb8a <__fp_zero>
     a52:	67 2f       	mov	r22, r23
     a54:	78 2f       	mov	r23, r24
     a56:	88 27       	eor	r24, r24
     a58:	b8 5f       	subi	r27, 0xF8	; 248
     a5a:	39 f0       	breq	.+14     	; 0xa6a <__fixunssfsi+0x46>
     a5c:	b9 3f       	cpi	r27, 0xF9	; 249
     a5e:	cc f3       	brlt	.-14     	; 0xa52 <__fixunssfsi+0x2e>
     a60:	86 95       	lsr	r24
     a62:	77 95       	ror	r23
     a64:	67 95       	ror	r22
     a66:	b3 95       	inc	r27
     a68:	d9 f7       	brne	.-10     	; 0xa60 <__fixunssfsi+0x3c>
     a6a:	3e f4       	brtc	.+14     	; 0xa7a <__fixunssfsi+0x56>
     a6c:	90 95       	com	r25
     a6e:	80 95       	com	r24
     a70:	70 95       	com	r23
     a72:	61 95       	neg	r22
     a74:	7f 4f       	sbci	r23, 0xFF	; 255
     a76:	8f 4f       	sbci	r24, 0xFF	; 255
     a78:	9f 4f       	sbci	r25, 0xFF	; 255
     a7a:	08 95       	ret

00000a7c <__floatunsisf>:
     a7c:	e8 94       	clt
     a7e:	09 c0       	rjmp	.+18     	; 0xa92 <__floatsisf+0x12>

00000a80 <__floatsisf>:
     a80:	97 fb       	bst	r25, 7
     a82:	3e f4       	brtc	.+14     	; 0xa92 <__floatsisf+0x12>
     a84:	90 95       	com	r25
     a86:	80 95       	com	r24
     a88:	70 95       	com	r23
     a8a:	61 95       	neg	r22
     a8c:	7f 4f       	sbci	r23, 0xFF	; 255
     a8e:	8f 4f       	sbci	r24, 0xFF	; 255
     a90:	9f 4f       	sbci	r25, 0xFF	; 255
     a92:	99 23       	and	r25, r25
     a94:	a9 f0       	breq	.+42     	; 0xac0 <__floatsisf+0x40>
     a96:	f9 2f       	mov	r31, r25
     a98:	96 e9       	ldi	r25, 0x96	; 150
     a9a:	bb 27       	eor	r27, r27
     a9c:	93 95       	inc	r25
     a9e:	f6 95       	lsr	r31
     aa0:	87 95       	ror	r24
     aa2:	77 95       	ror	r23
     aa4:	67 95       	ror	r22
     aa6:	b7 95       	ror	r27
     aa8:	f1 11       	cpse	r31, r1
     aaa:	f8 cf       	rjmp	.-16     	; 0xa9c <__floatsisf+0x1c>
     aac:	fa f4       	brpl	.+62     	; 0xaec <__floatsisf+0x6c>
     aae:	bb 0f       	add	r27, r27
     ab0:	11 f4       	brne	.+4      	; 0xab6 <__floatsisf+0x36>
     ab2:	60 ff       	sbrs	r22, 0
     ab4:	1b c0       	rjmp	.+54     	; 0xaec <__floatsisf+0x6c>
     ab6:	6f 5f       	subi	r22, 0xFF	; 255
     ab8:	7f 4f       	sbci	r23, 0xFF	; 255
     aba:	8f 4f       	sbci	r24, 0xFF	; 255
     abc:	9f 4f       	sbci	r25, 0xFF	; 255
     abe:	16 c0       	rjmp	.+44     	; 0xaec <__floatsisf+0x6c>
     ac0:	88 23       	and	r24, r24
     ac2:	11 f0       	breq	.+4      	; 0xac8 <__floatsisf+0x48>
     ac4:	96 e9       	ldi	r25, 0x96	; 150
     ac6:	11 c0       	rjmp	.+34     	; 0xaea <__floatsisf+0x6a>
     ac8:	77 23       	and	r23, r23
     aca:	21 f0       	breq	.+8      	; 0xad4 <__floatsisf+0x54>
     acc:	9e e8       	ldi	r25, 0x8E	; 142
     ace:	87 2f       	mov	r24, r23
     ad0:	76 2f       	mov	r23, r22
     ad2:	05 c0       	rjmp	.+10     	; 0xade <__floatsisf+0x5e>
     ad4:	66 23       	and	r22, r22
     ad6:	71 f0       	breq	.+28     	; 0xaf4 <__floatsisf+0x74>
     ad8:	96 e8       	ldi	r25, 0x86	; 134
     ada:	86 2f       	mov	r24, r22
     adc:	70 e0       	ldi	r23, 0x00	; 0
     ade:	60 e0       	ldi	r22, 0x00	; 0
     ae0:	2a f0       	brmi	.+10     	; 0xaec <__floatsisf+0x6c>
     ae2:	9a 95       	dec	r25
     ae4:	66 0f       	add	r22, r22
     ae6:	77 1f       	adc	r23, r23
     ae8:	88 1f       	adc	r24, r24
     aea:	da f7       	brpl	.-10     	; 0xae2 <__floatsisf+0x62>
     aec:	88 0f       	add	r24, r24
     aee:	96 95       	lsr	r25
     af0:	87 95       	ror	r24
     af2:	97 f9       	bld	r25, 7
     af4:	08 95       	ret

00000af6 <__fp_inf>:
     af6:	97 f9       	bld	r25, 7
     af8:	9f 67       	ori	r25, 0x7F	; 127
     afa:	80 e8       	ldi	r24, 0x80	; 128
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	60 e0       	ldi	r22, 0x00	; 0
     b00:	08 95       	ret

00000b02 <__fp_nan>:
     b02:	9f ef       	ldi	r25, 0xFF	; 255
     b04:	80 ec       	ldi	r24, 0xC0	; 192
     b06:	08 95       	ret

00000b08 <__fp_pscA>:
     b08:	00 24       	eor	r0, r0
     b0a:	0a 94       	dec	r0
     b0c:	16 16       	cp	r1, r22
     b0e:	17 06       	cpc	r1, r23
     b10:	18 06       	cpc	r1, r24
     b12:	09 06       	cpc	r0, r25
     b14:	08 95       	ret

00000b16 <__fp_pscB>:
     b16:	00 24       	eor	r0, r0
     b18:	0a 94       	dec	r0
     b1a:	12 16       	cp	r1, r18
     b1c:	13 06       	cpc	r1, r19
     b1e:	14 06       	cpc	r1, r20
     b20:	05 06       	cpc	r0, r21
     b22:	08 95       	ret

00000b24 <__fp_round>:
     b24:	09 2e       	mov	r0, r25
     b26:	03 94       	inc	r0
     b28:	00 0c       	add	r0, r0
     b2a:	11 f4       	brne	.+4      	; 0xb30 <__fp_round+0xc>
     b2c:	88 23       	and	r24, r24
     b2e:	52 f0       	brmi	.+20     	; 0xb44 <__fp_round+0x20>
     b30:	bb 0f       	add	r27, r27
     b32:	40 f4       	brcc	.+16     	; 0xb44 <__fp_round+0x20>
     b34:	bf 2b       	or	r27, r31
     b36:	11 f4       	brne	.+4      	; 0xb3c <__fp_round+0x18>
     b38:	60 ff       	sbrs	r22, 0
     b3a:	04 c0       	rjmp	.+8      	; 0xb44 <__fp_round+0x20>
     b3c:	6f 5f       	subi	r22, 0xFF	; 255
     b3e:	7f 4f       	sbci	r23, 0xFF	; 255
     b40:	8f 4f       	sbci	r24, 0xFF	; 255
     b42:	9f 4f       	sbci	r25, 0xFF	; 255
     b44:	08 95       	ret

00000b46 <__fp_split3>:
     b46:	57 fd       	sbrc	r21, 7
     b48:	90 58       	subi	r25, 0x80	; 128
     b4a:	44 0f       	add	r20, r20
     b4c:	55 1f       	adc	r21, r21
     b4e:	59 f0       	breq	.+22     	; 0xb66 <__fp_splitA+0x10>
     b50:	5f 3f       	cpi	r21, 0xFF	; 255
     b52:	71 f0       	breq	.+28     	; 0xb70 <__fp_splitA+0x1a>
     b54:	47 95       	ror	r20

00000b56 <__fp_splitA>:
     b56:	88 0f       	add	r24, r24
     b58:	97 fb       	bst	r25, 7
     b5a:	99 1f       	adc	r25, r25
     b5c:	61 f0       	breq	.+24     	; 0xb76 <__fp_splitA+0x20>
     b5e:	9f 3f       	cpi	r25, 0xFF	; 255
     b60:	79 f0       	breq	.+30     	; 0xb80 <__fp_splitA+0x2a>
     b62:	87 95       	ror	r24
     b64:	08 95       	ret
     b66:	12 16       	cp	r1, r18
     b68:	13 06       	cpc	r1, r19
     b6a:	14 06       	cpc	r1, r20
     b6c:	55 1f       	adc	r21, r21
     b6e:	f2 cf       	rjmp	.-28     	; 0xb54 <__fp_split3+0xe>
     b70:	46 95       	lsr	r20
     b72:	f1 df       	rcall	.-30     	; 0xb56 <__fp_splitA>
     b74:	08 c0       	rjmp	.+16     	; 0xb86 <__fp_splitA+0x30>
     b76:	16 16       	cp	r1, r22
     b78:	17 06       	cpc	r1, r23
     b7a:	18 06       	cpc	r1, r24
     b7c:	99 1f       	adc	r25, r25
     b7e:	f1 cf       	rjmp	.-30     	; 0xb62 <__fp_splitA+0xc>
     b80:	86 95       	lsr	r24
     b82:	71 05       	cpc	r23, r1
     b84:	61 05       	cpc	r22, r1
     b86:	08 94       	sec
     b88:	08 95       	ret

00000b8a <__fp_zero>:
     b8a:	e8 94       	clt

00000b8c <__fp_szero>:
     b8c:	bb 27       	eor	r27, r27
     b8e:	66 27       	eor	r22, r22
     b90:	77 27       	eor	r23, r23
     b92:	cb 01       	movw	r24, r22
     b94:	97 f9       	bld	r25, 7
     b96:	08 95       	ret

00000b98 <__mulsf3>:
     b98:	0b d0       	rcall	.+22     	; 0xbb0 <__mulsf3x>
     b9a:	c4 cf       	rjmp	.-120    	; 0xb24 <__fp_round>
     b9c:	b5 df       	rcall	.-150    	; 0xb08 <__fp_pscA>
     b9e:	28 f0       	brcs	.+10     	; 0xbaa <__mulsf3+0x12>
     ba0:	ba df       	rcall	.-140    	; 0xb16 <__fp_pscB>
     ba2:	18 f0       	brcs	.+6      	; 0xbaa <__mulsf3+0x12>
     ba4:	95 23       	and	r25, r21
     ba6:	09 f0       	breq	.+2      	; 0xbaa <__mulsf3+0x12>
     ba8:	a6 cf       	rjmp	.-180    	; 0xaf6 <__fp_inf>
     baa:	ab cf       	rjmp	.-170    	; 0xb02 <__fp_nan>
     bac:	11 24       	eor	r1, r1
     bae:	ee cf       	rjmp	.-36     	; 0xb8c <__fp_szero>

00000bb0 <__mulsf3x>:
     bb0:	ca df       	rcall	.-108    	; 0xb46 <__fp_split3>
     bb2:	a0 f3       	brcs	.-24     	; 0xb9c <__mulsf3+0x4>

00000bb4 <__mulsf3_pse>:
     bb4:	95 9f       	mul	r25, r21
     bb6:	d1 f3       	breq	.-12     	; 0xbac <__mulsf3+0x14>
     bb8:	95 0f       	add	r25, r21
     bba:	50 e0       	ldi	r21, 0x00	; 0
     bbc:	55 1f       	adc	r21, r21
     bbe:	62 9f       	mul	r22, r18
     bc0:	f0 01       	movw	r30, r0
     bc2:	72 9f       	mul	r23, r18
     bc4:	bb 27       	eor	r27, r27
     bc6:	f0 0d       	add	r31, r0
     bc8:	b1 1d       	adc	r27, r1
     bca:	63 9f       	mul	r22, r19
     bcc:	aa 27       	eor	r26, r26
     bce:	f0 0d       	add	r31, r0
     bd0:	b1 1d       	adc	r27, r1
     bd2:	aa 1f       	adc	r26, r26
     bd4:	64 9f       	mul	r22, r20
     bd6:	66 27       	eor	r22, r22
     bd8:	b0 0d       	add	r27, r0
     bda:	a1 1d       	adc	r26, r1
     bdc:	66 1f       	adc	r22, r22
     bde:	82 9f       	mul	r24, r18
     be0:	22 27       	eor	r18, r18
     be2:	b0 0d       	add	r27, r0
     be4:	a1 1d       	adc	r26, r1
     be6:	62 1f       	adc	r22, r18
     be8:	73 9f       	mul	r23, r19
     bea:	b0 0d       	add	r27, r0
     bec:	a1 1d       	adc	r26, r1
     bee:	62 1f       	adc	r22, r18
     bf0:	83 9f       	mul	r24, r19
     bf2:	a0 0d       	add	r26, r0
     bf4:	61 1d       	adc	r22, r1
     bf6:	22 1f       	adc	r18, r18
     bf8:	74 9f       	mul	r23, r20
     bfa:	33 27       	eor	r19, r19
     bfc:	a0 0d       	add	r26, r0
     bfe:	61 1d       	adc	r22, r1
     c00:	23 1f       	adc	r18, r19
     c02:	84 9f       	mul	r24, r20
     c04:	60 0d       	add	r22, r0
     c06:	21 1d       	adc	r18, r1
     c08:	82 2f       	mov	r24, r18
     c0a:	76 2f       	mov	r23, r22
     c0c:	6a 2f       	mov	r22, r26
     c0e:	11 24       	eor	r1, r1
     c10:	9f 57       	subi	r25, 0x7F	; 127
     c12:	50 40       	sbci	r21, 0x00	; 0
     c14:	8a f0       	brmi	.+34     	; 0xc38 <__mulsf3_pse+0x84>
     c16:	e1 f0       	breq	.+56     	; 0xc50 <__mulsf3_pse+0x9c>
     c18:	88 23       	and	r24, r24
     c1a:	4a f0       	brmi	.+18     	; 0xc2e <__mulsf3_pse+0x7a>
     c1c:	ee 0f       	add	r30, r30
     c1e:	ff 1f       	adc	r31, r31
     c20:	bb 1f       	adc	r27, r27
     c22:	66 1f       	adc	r22, r22
     c24:	77 1f       	adc	r23, r23
     c26:	88 1f       	adc	r24, r24
     c28:	91 50       	subi	r25, 0x01	; 1
     c2a:	50 40       	sbci	r21, 0x00	; 0
     c2c:	a9 f7       	brne	.-22     	; 0xc18 <__mulsf3_pse+0x64>
     c2e:	9e 3f       	cpi	r25, 0xFE	; 254
     c30:	51 05       	cpc	r21, r1
     c32:	70 f0       	brcs	.+28     	; 0xc50 <__mulsf3_pse+0x9c>
     c34:	60 cf       	rjmp	.-320    	; 0xaf6 <__fp_inf>
     c36:	aa cf       	rjmp	.-172    	; 0xb8c <__fp_szero>
     c38:	5f 3f       	cpi	r21, 0xFF	; 255
     c3a:	ec f3       	brlt	.-6      	; 0xc36 <__mulsf3_pse+0x82>
     c3c:	98 3e       	cpi	r25, 0xE8	; 232
     c3e:	dc f3       	brlt	.-10     	; 0xc36 <__mulsf3_pse+0x82>
     c40:	86 95       	lsr	r24
     c42:	77 95       	ror	r23
     c44:	67 95       	ror	r22
     c46:	b7 95       	ror	r27
     c48:	f7 95       	ror	r31
     c4a:	e7 95       	ror	r30
     c4c:	9f 5f       	subi	r25, 0xFF	; 255
     c4e:	c1 f7       	brne	.-16     	; 0xc40 <__mulsf3_pse+0x8c>
     c50:	fe 2b       	or	r31, r30
     c52:	88 0f       	add	r24, r24
     c54:	91 1d       	adc	r25, r1
     c56:	96 95       	lsr	r25
     c58:	87 95       	ror	r24
     c5a:	97 f9       	bld	r25, 7
     c5c:	08 95       	ret

00000c5e <pow>:
     c5e:	fa 01       	movw	r30, r20
     c60:	ee 0f       	add	r30, r30
     c62:	ff 1f       	adc	r31, r31
     c64:	30 96       	adiw	r30, 0x00	; 0
     c66:	21 05       	cpc	r18, r1
     c68:	31 05       	cpc	r19, r1
     c6a:	99 f1       	breq	.+102    	; 0xcd2 <pow+0x74>
     c6c:	61 15       	cp	r22, r1
     c6e:	71 05       	cpc	r23, r1
     c70:	61 f4       	brne	.+24     	; 0xc8a <pow+0x2c>
     c72:	80 38       	cpi	r24, 0x80	; 128
     c74:	bf e3       	ldi	r27, 0x3F	; 63
     c76:	9b 07       	cpc	r25, r27
     c78:	49 f1       	breq	.+82     	; 0xccc <pow+0x6e>
     c7a:	68 94       	set
     c7c:	90 38       	cpi	r25, 0x80	; 128
     c7e:	81 05       	cpc	r24, r1
     c80:	61 f0       	breq	.+24     	; 0xc9a <pow+0x3c>
     c82:	80 38       	cpi	r24, 0x80	; 128
     c84:	bf ef       	ldi	r27, 0xFF	; 255
     c86:	9b 07       	cpc	r25, r27
     c88:	41 f0       	breq	.+16     	; 0xc9a <pow+0x3c>
     c8a:	99 23       	and	r25, r25
     c8c:	42 f5       	brpl	.+80     	; 0xcde <pow+0x80>
     c8e:	ff 3f       	cpi	r31, 0xFF	; 255
     c90:	e1 05       	cpc	r30, r1
     c92:	31 05       	cpc	r19, r1
     c94:	21 05       	cpc	r18, r1
     c96:	11 f1       	breq	.+68     	; 0xcdc <pow+0x7e>
     c98:	e8 94       	clt
     c9a:	08 94       	sec
     c9c:	e7 95       	ror	r30
     c9e:	d9 01       	movw	r26, r18
     ca0:	aa 23       	and	r26, r26
     ca2:	29 f4       	brne	.+10     	; 0xcae <pow+0x50>
     ca4:	ab 2f       	mov	r26, r27
     ca6:	be 2f       	mov	r27, r30
     ca8:	f8 5f       	subi	r31, 0xF8	; 248
     caa:	d0 f3       	brcs	.-12     	; 0xca0 <pow+0x42>
     cac:	10 c0       	rjmp	.+32     	; 0xcce <pow+0x70>
     cae:	ff 5f       	subi	r31, 0xFF	; 255
     cb0:	70 f4       	brcc	.+28     	; 0xcce <pow+0x70>
     cb2:	a6 95       	lsr	r26
     cb4:	e0 f7       	brcc	.-8      	; 0xcae <pow+0x50>
     cb6:	f7 39       	cpi	r31, 0x97	; 151
     cb8:	50 f0       	brcs	.+20     	; 0xcce <pow+0x70>
     cba:	19 f0       	breq	.+6      	; 0xcc2 <pow+0x64>
     cbc:	ff 3a       	cpi	r31, 0xAF	; 175
     cbe:	38 f4       	brcc	.+14     	; 0xcce <pow+0x70>
     cc0:	9f 77       	andi	r25, 0x7F	; 127
     cc2:	9f 93       	push	r25
     cc4:	0c d0       	rcall	.+24     	; 0xcde <pow+0x80>
     cc6:	0f 90       	pop	r0
     cc8:	07 fc       	sbrc	r0, 7
     cca:	90 58       	subi	r25, 0x80	; 128
     ccc:	08 95       	ret
     cce:	3e f0       	brts	.+14     	; 0xcde <pow+0x80>
     cd0:	18 cf       	rjmp	.-464    	; 0xb02 <__fp_nan>
     cd2:	60 e0       	ldi	r22, 0x00	; 0
     cd4:	70 e0       	ldi	r23, 0x00	; 0
     cd6:	80 e8       	ldi	r24, 0x80	; 128
     cd8:	9f e3       	ldi	r25, 0x3F	; 63
     cda:	08 95       	ret
     cdc:	4f e7       	ldi	r20, 0x7F	; 127
     cde:	9f 77       	andi	r25, 0x7F	; 127
     ce0:	5f 93       	push	r21
     ce2:	4f 93       	push	r20
     ce4:	3f 93       	push	r19
     ce6:	2f 93       	push	r18
     ce8:	9e d0       	rcall	.+316    	; 0xe26 <log>
     cea:	2f 91       	pop	r18
     cec:	3f 91       	pop	r19
     cee:	4f 91       	pop	r20
     cf0:	5f 91       	pop	r21
     cf2:	52 df       	rcall	.-348    	; 0xb98 <__mulsf3>
     cf4:	05 c0       	rjmp	.+10     	; 0xd00 <exp>
     cf6:	19 f4       	brne	.+6      	; 0xcfe <pow+0xa0>
     cf8:	0e f0       	brts	.+2      	; 0xcfc <pow+0x9e>
     cfa:	fd ce       	rjmp	.-518    	; 0xaf6 <__fp_inf>
     cfc:	46 cf       	rjmp	.-372    	; 0xb8a <__fp_zero>
     cfe:	01 cf       	rjmp	.-510    	; 0xb02 <__fp_nan>

00000d00 <exp>:
     d00:	2a df       	rcall	.-428    	; 0xb56 <__fp_splitA>
     d02:	c8 f3       	brcs	.-14     	; 0xcf6 <pow+0x98>
     d04:	96 38       	cpi	r25, 0x86	; 134
     d06:	c0 f7       	brcc	.-16     	; 0xcf8 <pow+0x9a>
     d08:	07 f8       	bld	r0, 7
     d0a:	0f 92       	push	r0
     d0c:	e8 94       	clt
     d0e:	2b e3       	ldi	r18, 0x3B	; 59
     d10:	3a ea       	ldi	r19, 0xAA	; 170
     d12:	48 eb       	ldi	r20, 0xB8	; 184
     d14:	5f e7       	ldi	r21, 0x7F	; 127
     d16:	4e df       	rcall	.-356    	; 0xbb4 <__mulsf3_pse>
     d18:	0f 92       	push	r0
     d1a:	0f 92       	push	r0
     d1c:	0f 92       	push	r0
     d1e:	4d b7       	in	r20, 0x3d	; 61
     d20:	5e b7       	in	r21, 0x3e	; 62
     d22:	0f 92       	push	r0
     d24:	c0 d0       	rcall	.+384    	; 0xea6 <modf>
     d26:	ec e8       	ldi	r30, 0x8C	; 140
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	16 d0       	rcall	.+44     	; 0xd58 <__fp_powser>
     d2c:	4f 91       	pop	r20
     d2e:	5f 91       	pop	r21
     d30:	ef 91       	pop	r30
     d32:	ff 91       	pop	r31
     d34:	e5 95       	asr	r30
     d36:	ee 1f       	adc	r30, r30
     d38:	ff 1f       	adc	r31, r31
     d3a:	49 f0       	breq	.+18     	; 0xd4e <exp+0x4e>
     d3c:	fe 57       	subi	r31, 0x7E	; 126
     d3e:	e0 68       	ori	r30, 0x80	; 128
     d40:	44 27       	eor	r20, r20
     d42:	ee 0f       	add	r30, r30
     d44:	44 1f       	adc	r20, r20
     d46:	fa 95       	dec	r31
     d48:	e1 f7       	brne	.-8      	; 0xd42 <exp+0x42>
     d4a:	41 95       	neg	r20
     d4c:	55 0b       	sbc	r21, r21
     d4e:	32 d0       	rcall	.+100    	; 0xdb4 <ldexp>
     d50:	0f 90       	pop	r0
     d52:	07 fe       	sbrs	r0, 7
     d54:	26 c0       	rjmp	.+76     	; 0xda2 <inverse>
     d56:	08 95       	ret

00000d58 <__fp_powser>:
     d58:	df 93       	push	r29
     d5a:	cf 93       	push	r28
     d5c:	1f 93       	push	r17
     d5e:	0f 93       	push	r16
     d60:	ff 92       	push	r15
     d62:	ef 92       	push	r14
     d64:	df 92       	push	r13
     d66:	7b 01       	movw	r14, r22
     d68:	8c 01       	movw	r16, r24
     d6a:	68 94       	set
     d6c:	05 c0       	rjmp	.+10     	; 0xd78 <__fp_powser+0x20>
     d6e:	da 2e       	mov	r13, r26
     d70:	ef 01       	movw	r28, r30
     d72:	1e df       	rcall	.-452    	; 0xbb0 <__mulsf3x>
     d74:	fe 01       	movw	r30, r28
     d76:	e8 94       	clt
     d78:	a5 91       	lpm	r26, Z+
     d7a:	25 91       	lpm	r18, Z+
     d7c:	35 91       	lpm	r19, Z+
     d7e:	45 91       	lpm	r20, Z+
     d80:	55 91       	lpm	r21, Z+
     d82:	ae f3       	brts	.-22     	; 0xd6e <__fp_powser+0x16>
     d84:	ef 01       	movw	r28, r30
     d86:	f6 dd       	rcall	.-1044   	; 0x974 <__addsf3x>
     d88:	fe 01       	movw	r30, r28
     d8a:	97 01       	movw	r18, r14
     d8c:	a8 01       	movw	r20, r16
     d8e:	da 94       	dec	r13
     d90:	79 f7       	brne	.-34     	; 0xd70 <__fp_powser+0x18>
     d92:	df 90       	pop	r13
     d94:	ef 90       	pop	r14
     d96:	ff 90       	pop	r15
     d98:	0f 91       	pop	r16
     d9a:	1f 91       	pop	r17
     d9c:	cf 91       	pop	r28
     d9e:	df 91       	pop	r29
     da0:	08 95       	ret

00000da2 <inverse>:
     da2:	9b 01       	movw	r18, r22
     da4:	ac 01       	movw	r20, r24
     da6:	60 e0       	ldi	r22, 0x00	; 0
     da8:	70 e0       	ldi	r23, 0x00	; 0
     daa:	80 e8       	ldi	r24, 0x80	; 128
     dac:	9f e3       	ldi	r25, 0x3F	; 63
     dae:	ae c0       	rjmp	.+348    	; 0xf0c <__divsf3>
     db0:	a2 ce       	rjmp	.-700    	; 0xaf6 <__fp_inf>
     db2:	14 c1       	rjmp	.+552    	; 0xfdc <__fp_mpack>

00000db4 <ldexp>:
     db4:	d0 de       	rcall	.-608    	; 0xb56 <__fp_splitA>
     db6:	e8 f3       	brcs	.-6      	; 0xdb2 <inverse+0x10>
     db8:	99 23       	and	r25, r25
     dba:	d9 f3       	breq	.-10     	; 0xdb2 <inverse+0x10>
     dbc:	94 0f       	add	r25, r20
     dbe:	51 1d       	adc	r21, r1
     dc0:	bb f3       	brvs	.-18     	; 0xdb0 <inverse+0xe>
     dc2:	91 50       	subi	r25, 0x01	; 1
     dc4:	50 40       	sbci	r21, 0x00	; 0
     dc6:	94 f0       	brlt	.+36     	; 0xdec <ldexp+0x38>
     dc8:	59 f0       	breq	.+22     	; 0xde0 <ldexp+0x2c>
     dca:	88 23       	and	r24, r24
     dcc:	32 f0       	brmi	.+12     	; 0xdda <ldexp+0x26>
     dce:	66 0f       	add	r22, r22
     dd0:	77 1f       	adc	r23, r23
     dd2:	88 1f       	adc	r24, r24
     dd4:	91 50       	subi	r25, 0x01	; 1
     dd6:	50 40       	sbci	r21, 0x00	; 0
     dd8:	c1 f7       	brne	.-16     	; 0xdca <ldexp+0x16>
     dda:	9e 3f       	cpi	r25, 0xFE	; 254
     ddc:	51 05       	cpc	r21, r1
     dde:	44 f7       	brge	.-48     	; 0xdb0 <inverse+0xe>
     de0:	88 0f       	add	r24, r24
     de2:	91 1d       	adc	r25, r1
     de4:	96 95       	lsr	r25
     de6:	87 95       	ror	r24
     de8:	97 f9       	bld	r25, 7
     dea:	08 95       	ret
     dec:	5f 3f       	cpi	r21, 0xFF	; 255
     dee:	ac f0       	brlt	.+42     	; 0xe1a <ldexp+0x66>
     df0:	98 3e       	cpi	r25, 0xE8	; 232
     df2:	9c f0       	brlt	.+38     	; 0xe1a <ldexp+0x66>
     df4:	bb 27       	eor	r27, r27
     df6:	86 95       	lsr	r24
     df8:	77 95       	ror	r23
     dfa:	67 95       	ror	r22
     dfc:	b7 95       	ror	r27
     dfe:	08 f4       	brcc	.+2      	; 0xe02 <ldexp+0x4e>
     e00:	b1 60       	ori	r27, 0x01	; 1
     e02:	93 95       	inc	r25
     e04:	c1 f7       	brne	.-16     	; 0xdf6 <ldexp+0x42>
     e06:	bb 0f       	add	r27, r27
     e08:	58 f7       	brcc	.-42     	; 0xde0 <ldexp+0x2c>
     e0a:	11 f4       	brne	.+4      	; 0xe10 <ldexp+0x5c>
     e0c:	60 ff       	sbrs	r22, 0
     e0e:	e8 cf       	rjmp	.-48     	; 0xde0 <ldexp+0x2c>
     e10:	6f 5f       	subi	r22, 0xFF	; 255
     e12:	7f 4f       	sbci	r23, 0xFF	; 255
     e14:	8f 4f       	sbci	r24, 0xFF	; 255
     e16:	9f 4f       	sbci	r25, 0xFF	; 255
     e18:	e3 cf       	rjmp	.-58     	; 0xde0 <ldexp+0x2c>
     e1a:	b8 ce       	rjmp	.-656    	; 0xb8c <__fp_szero>
     e1c:	0e f0       	brts	.+2      	; 0xe20 <ldexp+0x6c>
     e1e:	de c0       	rjmp	.+444    	; 0xfdc <__fp_mpack>
     e20:	70 ce       	rjmp	.-800    	; 0xb02 <__fp_nan>
     e22:	68 94       	set
     e24:	68 ce       	rjmp	.-816    	; 0xaf6 <__fp_inf>

00000e26 <log>:
     e26:	97 de       	rcall	.-722    	; 0xb56 <__fp_splitA>
     e28:	c8 f3       	brcs	.-14     	; 0xe1c <ldexp+0x68>
     e2a:	99 23       	and	r25, r25
     e2c:	d1 f3       	breq	.-12     	; 0xe22 <ldexp+0x6e>
     e2e:	c6 f3       	brts	.-16     	; 0xe20 <ldexp+0x6c>
     e30:	df 93       	push	r29
     e32:	cf 93       	push	r28
     e34:	1f 93       	push	r17
     e36:	0f 93       	push	r16
     e38:	ff 92       	push	r15
     e3a:	c9 2f       	mov	r28, r25
     e3c:	dd 27       	eor	r29, r29
     e3e:	88 23       	and	r24, r24
     e40:	2a f0       	brmi	.+10     	; 0xe4c <log+0x26>
     e42:	21 97       	sbiw	r28, 0x01	; 1
     e44:	66 0f       	add	r22, r22
     e46:	77 1f       	adc	r23, r23
     e48:	88 1f       	adc	r24, r24
     e4a:	da f7       	brpl	.-10     	; 0xe42 <log+0x1c>
     e4c:	20 e0       	ldi	r18, 0x00	; 0
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	40 e8       	ldi	r20, 0x80	; 128
     e52:	5f eb       	ldi	r21, 0xBF	; 191
     e54:	9f e3       	ldi	r25, 0x3F	; 63
     e56:	88 39       	cpi	r24, 0x98	; 152
     e58:	20 f0       	brcs	.+8      	; 0xe62 <log+0x3c>
     e5a:	80 3e       	cpi	r24, 0xE0	; 224
     e5c:	30 f0       	brcs	.+12     	; 0xe6a <log+0x44>
     e5e:	21 96       	adiw	r28, 0x01	; 1
     e60:	8f 77       	andi	r24, 0x7F	; 127
     e62:	77 dd       	rcall	.-1298   	; 0x952 <__addsf3>
     e64:	e4 eb       	ldi	r30, 0xB4	; 180
     e66:	f0 e0       	ldi	r31, 0x00	; 0
     e68:	03 c0       	rjmp	.+6      	; 0xe70 <log+0x4a>
     e6a:	73 dd       	rcall	.-1306   	; 0x952 <__addsf3>
     e6c:	e1 ee       	ldi	r30, 0xE1	; 225
     e6e:	f0 e0       	ldi	r31, 0x00	; 0
     e70:	73 df       	rcall	.-282    	; 0xd58 <__fp_powser>
     e72:	8b 01       	movw	r16, r22
     e74:	be 01       	movw	r22, r28
     e76:	ec 01       	movw	r28, r24
     e78:	fb 2e       	mov	r15, r27
     e7a:	6f 57       	subi	r22, 0x7F	; 127
     e7c:	71 09       	sbc	r23, r1
     e7e:	75 95       	asr	r23
     e80:	77 1f       	adc	r23, r23
     e82:	88 0b       	sbc	r24, r24
     e84:	99 0b       	sbc	r25, r25
     e86:	fc dd       	rcall	.-1032   	; 0xa80 <__floatsisf>
     e88:	28 e1       	ldi	r18, 0x18	; 24
     e8a:	32 e7       	ldi	r19, 0x72	; 114
     e8c:	41 e3       	ldi	r20, 0x31	; 49
     e8e:	5f e3       	ldi	r21, 0x3F	; 63
     e90:	8f de       	rcall	.-738    	; 0xbb0 <__mulsf3x>
     e92:	af 2d       	mov	r26, r15
     e94:	98 01       	movw	r18, r16
     e96:	ae 01       	movw	r20, r28
     e98:	ff 90       	pop	r15
     e9a:	0f 91       	pop	r16
     e9c:	1f 91       	pop	r17
     e9e:	cf 91       	pop	r28
     ea0:	df 91       	pop	r29
     ea2:	68 dd       	rcall	.-1328   	; 0x974 <__addsf3x>
     ea4:	3f ce       	rjmp	.-898    	; 0xb24 <__fp_round>

00000ea6 <modf>:
     ea6:	fa 01       	movw	r30, r20
     ea8:	dc 01       	movw	r26, r24
     eaa:	aa 0f       	add	r26, r26
     eac:	bb 1f       	adc	r27, r27
     eae:	9b 01       	movw	r18, r22
     eb0:	ac 01       	movw	r20, r24
     eb2:	bf 57       	subi	r27, 0x7F	; 127
     eb4:	28 f4       	brcc	.+10     	; 0xec0 <modf+0x1a>
     eb6:	22 27       	eor	r18, r18
     eb8:	33 27       	eor	r19, r19
     eba:	44 27       	eor	r20, r20
     ebc:	50 78       	andi	r21, 0x80	; 128
     ebe:	1f c0       	rjmp	.+62     	; 0xefe <modf+0x58>
     ec0:	b7 51       	subi	r27, 0x17	; 23
     ec2:	88 f4       	brcc	.+34     	; 0xee6 <modf+0x40>
     ec4:	ab 2f       	mov	r26, r27
     ec6:	00 24       	eor	r0, r0
     ec8:	46 95       	lsr	r20
     eca:	37 95       	ror	r19
     ecc:	27 95       	ror	r18
     ece:	01 1c       	adc	r0, r1
     ed0:	a3 95       	inc	r26
     ed2:	d2 f3       	brmi	.-12     	; 0xec8 <modf+0x22>
     ed4:	00 20       	and	r0, r0
     ed6:	69 f0       	breq	.+26     	; 0xef2 <modf+0x4c>
     ed8:	22 0f       	add	r18, r18
     eda:	33 1f       	adc	r19, r19
     edc:	44 1f       	adc	r20, r20
     ede:	b3 95       	inc	r27
     ee0:	da f3       	brmi	.-10     	; 0xed8 <modf+0x32>
     ee2:	0d d0       	rcall	.+26     	; 0xefe <modf+0x58>
     ee4:	35 cd       	rjmp	.-1430   	; 0x950 <__subsf3>
     ee6:	61 30       	cpi	r22, 0x01	; 1
     ee8:	71 05       	cpc	r23, r1
     eea:	a0 e8       	ldi	r26, 0x80	; 128
     eec:	8a 07       	cpc	r24, r26
     eee:	b9 46       	sbci	r27, 0x69	; 105
     ef0:	30 f4       	brcc	.+12     	; 0xefe <modf+0x58>
     ef2:	9b 01       	movw	r18, r22
     ef4:	ac 01       	movw	r20, r24
     ef6:	66 27       	eor	r22, r22
     ef8:	77 27       	eor	r23, r23
     efa:	88 27       	eor	r24, r24
     efc:	90 78       	andi	r25, 0x80	; 128
     efe:	30 96       	adiw	r30, 0x00	; 0
     f00:	21 f0       	breq	.+8      	; 0xf0a <modf+0x64>
     f02:	20 83       	st	Z, r18
     f04:	31 83       	std	Z+1, r19	; 0x01
     f06:	42 83       	std	Z+2, r20	; 0x02
     f08:	53 83       	std	Z+3, r21	; 0x03
     f0a:	08 95       	ret

00000f0c <__divsf3>:
     f0c:	0c d0       	rcall	.+24     	; 0xf26 <__divsf3x>
     f0e:	0a ce       	rjmp	.-1004   	; 0xb24 <__fp_round>
     f10:	02 de       	rcall	.-1020   	; 0xb16 <__fp_pscB>
     f12:	40 f0       	brcs	.+16     	; 0xf24 <__divsf3+0x18>
     f14:	f9 dd       	rcall	.-1038   	; 0xb08 <__fp_pscA>
     f16:	30 f0       	brcs	.+12     	; 0xf24 <__divsf3+0x18>
     f18:	21 f4       	brne	.+8      	; 0xf22 <__divsf3+0x16>
     f1a:	5f 3f       	cpi	r21, 0xFF	; 255
     f1c:	19 f0       	breq	.+6      	; 0xf24 <__divsf3+0x18>
     f1e:	eb cd       	rjmp	.-1066   	; 0xaf6 <__fp_inf>
     f20:	51 11       	cpse	r21, r1
     f22:	34 ce       	rjmp	.-920    	; 0xb8c <__fp_szero>
     f24:	ee cd       	rjmp	.-1060   	; 0xb02 <__fp_nan>

00000f26 <__divsf3x>:
     f26:	0f de       	rcall	.-994    	; 0xb46 <__fp_split3>
     f28:	98 f3       	brcs	.-26     	; 0xf10 <__divsf3+0x4>

00000f2a <__divsf3_pse>:
     f2a:	99 23       	and	r25, r25
     f2c:	c9 f3       	breq	.-14     	; 0xf20 <__divsf3+0x14>
     f2e:	55 23       	and	r21, r21
     f30:	b1 f3       	breq	.-20     	; 0xf1e <__divsf3+0x12>
     f32:	95 1b       	sub	r25, r21
     f34:	55 0b       	sbc	r21, r21
     f36:	bb 27       	eor	r27, r27
     f38:	aa 27       	eor	r26, r26
     f3a:	62 17       	cp	r22, r18
     f3c:	73 07       	cpc	r23, r19
     f3e:	84 07       	cpc	r24, r20
     f40:	38 f0       	brcs	.+14     	; 0xf50 <__divsf3_pse+0x26>
     f42:	9f 5f       	subi	r25, 0xFF	; 255
     f44:	5f 4f       	sbci	r21, 0xFF	; 255
     f46:	22 0f       	add	r18, r18
     f48:	33 1f       	adc	r19, r19
     f4a:	44 1f       	adc	r20, r20
     f4c:	aa 1f       	adc	r26, r26
     f4e:	a9 f3       	breq	.-22     	; 0xf3a <__divsf3_pse+0x10>
     f50:	33 d0       	rcall	.+102    	; 0xfb8 <__divsf3_pse+0x8e>
     f52:	0e 2e       	mov	r0, r30
     f54:	3a f0       	brmi	.+14     	; 0xf64 <__divsf3_pse+0x3a>
     f56:	e0 e8       	ldi	r30, 0x80	; 128
     f58:	30 d0       	rcall	.+96     	; 0xfba <__divsf3_pse+0x90>
     f5a:	91 50       	subi	r25, 0x01	; 1
     f5c:	50 40       	sbci	r21, 0x00	; 0
     f5e:	e6 95       	lsr	r30
     f60:	00 1c       	adc	r0, r0
     f62:	ca f7       	brpl	.-14     	; 0xf56 <__divsf3_pse+0x2c>
     f64:	29 d0       	rcall	.+82     	; 0xfb8 <__divsf3_pse+0x8e>
     f66:	fe 2f       	mov	r31, r30
     f68:	27 d0       	rcall	.+78     	; 0xfb8 <__divsf3_pse+0x8e>
     f6a:	66 0f       	add	r22, r22
     f6c:	77 1f       	adc	r23, r23
     f6e:	88 1f       	adc	r24, r24
     f70:	bb 1f       	adc	r27, r27
     f72:	26 17       	cp	r18, r22
     f74:	37 07       	cpc	r19, r23
     f76:	48 07       	cpc	r20, r24
     f78:	ab 07       	cpc	r26, r27
     f7a:	b0 e8       	ldi	r27, 0x80	; 128
     f7c:	09 f0       	breq	.+2      	; 0xf80 <__divsf3_pse+0x56>
     f7e:	bb 0b       	sbc	r27, r27
     f80:	80 2d       	mov	r24, r0
     f82:	bf 01       	movw	r22, r30
     f84:	ff 27       	eor	r31, r31
     f86:	93 58       	subi	r25, 0x83	; 131
     f88:	5f 4f       	sbci	r21, 0xFF	; 255
     f8a:	2a f0       	brmi	.+10     	; 0xf96 <__divsf3_pse+0x6c>
     f8c:	9e 3f       	cpi	r25, 0xFE	; 254
     f8e:	51 05       	cpc	r21, r1
     f90:	68 f0       	brcs	.+26     	; 0xfac <__divsf3_pse+0x82>
     f92:	b1 cd       	rjmp	.-1182   	; 0xaf6 <__fp_inf>
     f94:	fb cd       	rjmp	.-1034   	; 0xb8c <__fp_szero>
     f96:	5f 3f       	cpi	r21, 0xFF	; 255
     f98:	ec f3       	brlt	.-6      	; 0xf94 <__divsf3_pse+0x6a>
     f9a:	98 3e       	cpi	r25, 0xE8	; 232
     f9c:	dc f3       	brlt	.-10     	; 0xf94 <__divsf3_pse+0x6a>
     f9e:	86 95       	lsr	r24
     fa0:	77 95       	ror	r23
     fa2:	67 95       	ror	r22
     fa4:	b7 95       	ror	r27
     fa6:	f7 95       	ror	r31
     fa8:	9f 5f       	subi	r25, 0xFF	; 255
     faa:	c9 f7       	brne	.-14     	; 0xf9e <__divsf3_pse+0x74>
     fac:	88 0f       	add	r24, r24
     fae:	91 1d       	adc	r25, r1
     fb0:	96 95       	lsr	r25
     fb2:	87 95       	ror	r24
     fb4:	97 f9       	bld	r25, 7
     fb6:	08 95       	ret
     fb8:	e1 e0       	ldi	r30, 0x01	; 1
     fba:	66 0f       	add	r22, r22
     fbc:	77 1f       	adc	r23, r23
     fbe:	88 1f       	adc	r24, r24
     fc0:	bb 1f       	adc	r27, r27
     fc2:	62 17       	cp	r22, r18
     fc4:	73 07       	cpc	r23, r19
     fc6:	84 07       	cpc	r24, r20
     fc8:	ba 07       	cpc	r27, r26
     fca:	20 f0       	brcs	.+8      	; 0xfd4 <__divsf3_pse+0xaa>
     fcc:	62 1b       	sub	r22, r18
     fce:	73 0b       	sbc	r23, r19
     fd0:	84 0b       	sbc	r24, r20
     fd2:	ba 0b       	sbc	r27, r26
     fd4:	ee 1f       	adc	r30, r30
     fd6:	88 f7       	brcc	.-30     	; 0xfba <__divsf3_pse+0x90>
     fd8:	e0 95       	com	r30
     fda:	08 95       	ret

00000fdc <__fp_mpack>:
     fdc:	9f 3f       	cpi	r25, 0xFF	; 255
     fde:	31 f0       	breq	.+12     	; 0xfec <__fp_mpack_finite+0xc>

00000fe0 <__fp_mpack_finite>:
     fe0:	91 50       	subi	r25, 0x01	; 1
     fe2:	20 f4       	brcc	.+8      	; 0xfec <__fp_mpack_finite+0xc>
     fe4:	87 95       	ror	r24
     fe6:	77 95       	ror	r23
     fe8:	67 95       	ror	r22
     fea:	b7 95       	ror	r27
     fec:	88 0f       	add	r24, r24
     fee:	91 1d       	adc	r25, r1
     ff0:	96 95       	lsr	r25
     ff2:	87 95       	ror	r24
     ff4:	97 f9       	bld	r25, 7
     ff6:	08 95       	ret

00000ff8 <__divmodhi4>:
     ff8:	97 fb       	bst	r25, 7
     ffa:	07 2e       	mov	r0, r23
     ffc:	16 f4       	brtc	.+4      	; 0x1002 <__divmodhi4+0xa>
     ffe:	00 94       	com	r0
    1000:	06 d0       	rcall	.+12     	; 0x100e <__divmodhi4_neg1>
    1002:	77 fd       	sbrc	r23, 7
    1004:	08 d0       	rcall	.+16     	; 0x1016 <__divmodhi4_neg2>
    1006:	12 d1       	rcall	.+548    	; 0x122c <__udivmodhi4>
    1008:	07 fc       	sbrc	r0, 7
    100a:	05 d0       	rcall	.+10     	; 0x1016 <__divmodhi4_neg2>
    100c:	3e f4       	brtc	.+14     	; 0x101c <__divmodhi4_exit>

0000100e <__divmodhi4_neg1>:
    100e:	90 95       	com	r25
    1010:	81 95       	neg	r24
    1012:	9f 4f       	sbci	r25, 0xFF	; 255
    1014:	08 95       	ret

00001016 <__divmodhi4_neg2>:
    1016:	70 95       	com	r23
    1018:	61 95       	neg	r22
    101a:	7f 4f       	sbci	r23, 0xFF	; 255

0000101c <__divmodhi4_exit>:
    101c:	08 95       	ret

0000101e <__moddi3>:
    101e:	68 94       	set
    1020:	01 c0       	rjmp	.+2      	; 0x1024 <__divdi3_moddi3>

00001022 <__divdi3>:
    1022:	e8 94       	clt

00001024 <__divdi3_moddi3>:
    1024:	f9 2f       	mov	r31, r25
    1026:	f1 2b       	or	r31, r17
    1028:	0a f0       	brmi	.+2      	; 0x102c <__divdi3_moddi3+0x8>
    102a:	27 c0       	rjmp	.+78     	; 0x107a <__udivdi3_umoddi3>
    102c:	a0 e0       	ldi	r26, 0x00	; 0
    102e:	b0 e0       	ldi	r27, 0x00	; 0
    1030:	eb e1       	ldi	r30, 0x1B	; 27
    1032:	f8 e0       	ldi	r31, 0x08	; 8
    1034:	93 c0       	rjmp	.+294    	; 0x115c <__prologue_saves__+0xc>
    1036:	09 2e       	mov	r0, r25
    1038:	05 94       	asr	r0
    103a:	1a f4       	brpl	.+6      	; 0x1042 <__divdi3_moddi3+0x1e>
    103c:	79 d0       	rcall	.+242    	; 0x1130 <__negdi2>
    103e:	11 23       	and	r17, r17
    1040:	92 f4       	brpl	.+36     	; 0x1066 <__divdi3_moddi3+0x42>
    1042:	f0 e8       	ldi	r31, 0x80	; 128
    1044:	0f 26       	eor	r0, r31
    1046:	ff ef       	ldi	r31, 0xFF	; 255
    1048:	e0 94       	com	r14
    104a:	f0 94       	com	r15
    104c:	00 95       	com	r16
    104e:	10 95       	com	r17
    1050:	b0 94       	com	r11
    1052:	c0 94       	com	r12
    1054:	d0 94       	com	r13
    1056:	a1 94       	neg	r10
    1058:	bf 0a       	sbc	r11, r31
    105a:	cf 0a       	sbc	r12, r31
    105c:	df 0a       	sbc	r13, r31
    105e:	ef 0a       	sbc	r14, r31
    1060:	ff 0a       	sbc	r15, r31
    1062:	0f 0b       	sbc	r16, r31
    1064:	1f 0b       	sbc	r17, r31
    1066:	13 d0       	rcall	.+38     	; 0x108e <__udivmod64>
    1068:	07 fc       	sbrc	r0, 7
    106a:	62 d0       	rcall	.+196    	; 0x1130 <__negdi2>
    106c:	cd b7       	in	r28, 0x3d	; 61
    106e:	de b7       	in	r29, 0x3e	; 62
    1070:	ec e0       	ldi	r30, 0x0C	; 12
    1072:	90 c0       	rjmp	.+288    	; 0x1194 <__epilogue_restores__+0xc>

00001074 <__umoddi3>:
    1074:	68 94       	set
    1076:	01 c0       	rjmp	.+2      	; 0x107a <__udivdi3_umoddi3>

00001078 <__udivdi3>:
    1078:	e8 94       	clt

0000107a <__udivdi3_umoddi3>:
    107a:	8f 92       	push	r8
    107c:	9f 92       	push	r9
    107e:	cf 93       	push	r28
    1080:	df 93       	push	r29
    1082:	05 d0       	rcall	.+10     	; 0x108e <__udivmod64>
    1084:	df 91       	pop	r29
    1086:	cf 91       	pop	r28
    1088:	9f 90       	pop	r9
    108a:	8f 90       	pop	r8
    108c:	08 95       	ret

0000108e <__udivmod64>:
    108e:	88 24       	eor	r8, r8
    1090:	99 24       	eor	r9, r9
    1092:	f4 01       	movw	r30, r8
    1094:	e4 01       	movw	r28, r8
    1096:	b0 e4       	ldi	r27, 0x40	; 64
    1098:	9f 93       	push	r25
    109a:	aa 27       	eor	r26, r26
    109c:	9a 15       	cp	r25, r10
    109e:	8b 04       	cpc	r8, r11
    10a0:	9c 04       	cpc	r9, r12
    10a2:	ed 05       	cpc	r30, r13
    10a4:	fe 05       	cpc	r31, r14
    10a6:	cf 05       	cpc	r28, r15
    10a8:	d0 07       	cpc	r29, r16
    10aa:	a1 07       	cpc	r26, r17
    10ac:	98 f4       	brcc	.+38     	; 0x10d4 <__udivmod64+0x46>
    10ae:	ad 2f       	mov	r26, r29
    10b0:	dc 2f       	mov	r29, r28
    10b2:	cf 2f       	mov	r28, r31
    10b4:	fe 2f       	mov	r31, r30
    10b6:	e9 2d       	mov	r30, r9
    10b8:	98 2c       	mov	r9, r8
    10ba:	89 2e       	mov	r8, r25
    10bc:	98 2f       	mov	r25, r24
    10be:	87 2f       	mov	r24, r23
    10c0:	76 2f       	mov	r23, r22
    10c2:	65 2f       	mov	r22, r21
    10c4:	54 2f       	mov	r21, r20
    10c6:	43 2f       	mov	r20, r19
    10c8:	32 2f       	mov	r19, r18
    10ca:	22 27       	eor	r18, r18
    10cc:	b8 50       	subi	r27, 0x08	; 8
    10ce:	31 f7       	brne	.-52     	; 0x109c <__udivmod64+0xe>
    10d0:	bf 91       	pop	r27
    10d2:	27 c0       	rjmp	.+78     	; 0x1122 <__stack+0x23>
    10d4:	1b 2e       	mov	r1, r27
    10d6:	bf 91       	pop	r27
    10d8:	bb 27       	eor	r27, r27
    10da:	22 0f       	add	r18, r18
    10dc:	33 1f       	adc	r19, r19
    10de:	44 1f       	adc	r20, r20
    10e0:	55 1f       	adc	r21, r21
    10e2:	66 1f       	adc	r22, r22
    10e4:	77 1f       	adc	r23, r23
    10e6:	88 1f       	adc	r24, r24
    10e8:	99 1f       	adc	r25, r25
    10ea:	88 1c       	adc	r8, r8
    10ec:	99 1c       	adc	r9, r9
    10ee:	ee 1f       	adc	r30, r30
    10f0:	ff 1f       	adc	r31, r31
    10f2:	cc 1f       	adc	r28, r28
    10f4:	dd 1f       	adc	r29, r29
    10f6:	aa 1f       	adc	r26, r26
    10f8:	bb 1f       	adc	r27, r27
    10fa:	8a 14       	cp	r8, r10
    10fc:	9b 04       	cpc	r9, r11
    10fe:	ec 05       	cpc	r30, r12
    1100:	fd 05       	cpc	r31, r13
    1102:	ce 05       	cpc	r28, r14
    1104:	df 05       	cpc	r29, r15
    1106:	a0 07       	cpc	r26, r16
    1108:	b1 07       	cpc	r27, r17
    110a:	48 f0       	brcs	.+18     	; 0x111e <__stack+0x1f>
    110c:	8a 18       	sub	r8, r10
    110e:	9b 08       	sbc	r9, r11
    1110:	ec 09       	sbc	r30, r12
    1112:	fd 09       	sbc	r31, r13
    1114:	ce 09       	sbc	r28, r14
    1116:	df 09       	sbc	r29, r15
    1118:	a0 0b       	sbc	r26, r16
    111a:	b1 0b       	sbc	r27, r17
    111c:	21 60       	ori	r18, 0x01	; 1
    111e:	1a 94       	dec	r1
    1120:	e1 f6       	brne	.-72     	; 0x10da <__udivmod64+0x4c>
    1122:	2e f4       	brtc	.+10     	; 0x112e <__stack+0x2f>
    1124:	94 01       	movw	r18, r8
    1126:	af 01       	movw	r20, r30
    1128:	be 01       	movw	r22, r28
    112a:	cd 01       	movw	r24, r26
    112c:	00 0c       	add	r0, r0
    112e:	08 95       	ret

00001130 <__negdi2>:
    1130:	60 95       	com	r22
    1132:	70 95       	com	r23
    1134:	80 95       	com	r24
    1136:	90 95       	com	r25
    1138:	30 95       	com	r19
    113a:	40 95       	com	r20
    113c:	50 95       	com	r21
    113e:	21 95       	neg	r18
    1140:	3f 4f       	sbci	r19, 0xFF	; 255
    1142:	4f 4f       	sbci	r20, 0xFF	; 255
    1144:	5f 4f       	sbci	r21, 0xFF	; 255
    1146:	6f 4f       	sbci	r22, 0xFF	; 255
    1148:	7f 4f       	sbci	r23, 0xFF	; 255
    114a:	8f 4f       	sbci	r24, 0xFF	; 255
    114c:	9f 4f       	sbci	r25, 0xFF	; 255
    114e:	08 95       	ret

00001150 <__prologue_saves__>:
    1150:	2f 92       	push	r2
    1152:	3f 92       	push	r3
    1154:	4f 92       	push	r4
    1156:	5f 92       	push	r5
    1158:	6f 92       	push	r6
    115a:	7f 92       	push	r7
    115c:	8f 92       	push	r8
    115e:	9f 92       	push	r9
    1160:	af 92       	push	r10
    1162:	bf 92       	push	r11
    1164:	cf 92       	push	r12
    1166:	df 92       	push	r13
    1168:	ef 92       	push	r14
    116a:	ff 92       	push	r15
    116c:	0f 93       	push	r16
    116e:	1f 93       	push	r17
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	cd b7       	in	r28, 0x3d	; 61
    1176:	de b7       	in	r29, 0x3e	; 62
    1178:	ca 1b       	sub	r28, r26
    117a:	db 0b       	sbc	r29, r27
    117c:	0f b6       	in	r0, 0x3f	; 63
    117e:	f8 94       	cli
    1180:	de bf       	out	0x3e, r29	; 62
    1182:	0f be       	out	0x3f, r0	; 63
    1184:	cd bf       	out	0x3d, r28	; 61
    1186:	09 94       	ijmp

00001188 <__epilogue_restores__>:
    1188:	2a 88       	ldd	r2, Y+18	; 0x12
    118a:	39 88       	ldd	r3, Y+17	; 0x11
    118c:	48 88       	ldd	r4, Y+16	; 0x10
    118e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1190:	6e 84       	ldd	r6, Y+14	; 0x0e
    1192:	7d 84       	ldd	r7, Y+13	; 0x0d
    1194:	8c 84       	ldd	r8, Y+12	; 0x0c
    1196:	9b 84       	ldd	r9, Y+11	; 0x0b
    1198:	aa 84       	ldd	r10, Y+10	; 0x0a
    119a:	b9 84       	ldd	r11, Y+9	; 0x09
    119c:	c8 84       	ldd	r12, Y+8	; 0x08
    119e:	df 80       	ldd	r13, Y+7	; 0x07
    11a0:	ee 80       	ldd	r14, Y+6	; 0x06
    11a2:	fd 80       	ldd	r15, Y+5	; 0x05
    11a4:	0c 81       	ldd	r16, Y+4	; 0x04
    11a6:	1b 81       	ldd	r17, Y+3	; 0x03
    11a8:	aa 81       	ldd	r26, Y+2	; 0x02
    11aa:	b9 81       	ldd	r27, Y+1	; 0x01
    11ac:	ce 0f       	add	r28, r30
    11ae:	d1 1d       	adc	r29, r1
    11b0:	0f b6       	in	r0, 0x3f	; 63
    11b2:	f8 94       	cli
    11b4:	de bf       	out	0x3e, r29	; 62
    11b6:	0f be       	out	0x3f, r0	; 63
    11b8:	cd bf       	out	0x3d, r28	; 61
    11ba:	ed 01       	movw	r28, r26
    11bc:	08 95       	ret

000011be <__ashldi3>:
    11be:	0f 93       	push	r16
    11c0:	08 30       	cpi	r16, 0x08	; 8
    11c2:	90 f0       	brcs	.+36     	; 0x11e8 <__ashldi3+0x2a>
    11c4:	98 2f       	mov	r25, r24
    11c6:	87 2f       	mov	r24, r23
    11c8:	76 2f       	mov	r23, r22
    11ca:	65 2f       	mov	r22, r21
    11cc:	54 2f       	mov	r21, r20
    11ce:	43 2f       	mov	r20, r19
    11d0:	32 2f       	mov	r19, r18
    11d2:	22 27       	eor	r18, r18
    11d4:	08 50       	subi	r16, 0x08	; 8
    11d6:	f4 cf       	rjmp	.-24     	; 0x11c0 <__ashldi3+0x2>
    11d8:	22 0f       	add	r18, r18
    11da:	33 1f       	adc	r19, r19
    11dc:	44 1f       	adc	r20, r20
    11de:	55 1f       	adc	r21, r21
    11e0:	66 1f       	adc	r22, r22
    11e2:	77 1f       	adc	r23, r23
    11e4:	88 1f       	adc	r24, r24
    11e6:	99 1f       	adc	r25, r25
    11e8:	0a 95       	dec	r16
    11ea:	b2 f7       	brpl	.-20     	; 0x11d8 <__ashldi3+0x1a>
    11ec:	0f 91       	pop	r16
    11ee:	08 95       	ret

000011f0 <__adddi3>:
    11f0:	2a 0d       	add	r18, r10
    11f2:	3b 1d       	adc	r19, r11
    11f4:	4c 1d       	adc	r20, r12
    11f6:	5d 1d       	adc	r21, r13
    11f8:	6e 1d       	adc	r22, r14
    11fa:	7f 1d       	adc	r23, r15
    11fc:	80 1f       	adc	r24, r16
    11fe:	91 1f       	adc	r25, r17
    1200:	08 95       	ret

00001202 <__subdi3>:
    1202:	2a 19       	sub	r18, r10
    1204:	3b 09       	sbc	r19, r11
    1206:	4c 09       	sbc	r20, r12
    1208:	5d 09       	sbc	r21, r13
    120a:	6e 09       	sbc	r22, r14
    120c:	7f 09       	sbc	r23, r15
    120e:	80 0b       	sbc	r24, r16
    1210:	91 0b       	sbc	r25, r17
    1212:	08 95       	ret

00001214 <__cmpdi2_s8>:
    1214:	00 24       	eor	r0, r0
    1216:	a7 fd       	sbrc	r26, 7
    1218:	00 94       	com	r0
    121a:	2a 17       	cp	r18, r26
    121c:	30 05       	cpc	r19, r0
    121e:	40 05       	cpc	r20, r0
    1220:	50 05       	cpc	r21, r0
    1222:	60 05       	cpc	r22, r0
    1224:	70 05       	cpc	r23, r0
    1226:	80 05       	cpc	r24, r0
    1228:	90 05       	cpc	r25, r0
    122a:	08 95       	ret

0000122c <__udivmodhi4>:
    122c:	aa 1b       	sub	r26, r26
    122e:	bb 1b       	sub	r27, r27
    1230:	51 e1       	ldi	r21, 0x11	; 17
    1232:	07 c0       	rjmp	.+14     	; 0x1242 <__udivmodhi4_ep>

00001234 <__udivmodhi4_loop>:
    1234:	aa 1f       	adc	r26, r26
    1236:	bb 1f       	adc	r27, r27
    1238:	a6 17       	cp	r26, r22
    123a:	b7 07       	cpc	r27, r23
    123c:	10 f0       	brcs	.+4      	; 0x1242 <__udivmodhi4_ep>
    123e:	a6 1b       	sub	r26, r22
    1240:	b7 0b       	sbc	r27, r23

00001242 <__udivmodhi4_ep>:
    1242:	88 1f       	adc	r24, r24
    1244:	99 1f       	adc	r25, r25
    1246:	5a 95       	dec	r21
    1248:	a9 f7       	brne	.-22     	; 0x1234 <__udivmodhi4_loop>
    124a:	80 95       	com	r24
    124c:	90 95       	com	r25
    124e:	bc 01       	movw	r22, r24
    1250:	cd 01       	movw	r24, r26
    1252:	08 95       	ret

00001254 <_exit>:
    1254:	f8 94       	cli

00001256 <__stop_program>:
    1256:	ff cf       	rjmp	.-2      	; 0x1256 <__stop_program>
